<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="805.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="654"><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.15%)</title><rect x="0.0000%" y="725" width="0.1529%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.15%)</title><rect x="0.1529%" y="725" width="0.1529%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.4029%" y="735.50"></text></g><g><title>_int_free (3 samples, 0.46%)</title><rect x="0.3058%" y="725" width="0.4587%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="0.5558%" y="735.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::release (1 samples, 0.15%)</title><rect x="0.7645%" y="725" width="0.1529%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="1"/><text x="1.0145%" y="735.50"></text></g><g><title>[anon] (9 samples, 1.38%)</title><rect x="0.0000%" y="741" width="1.3761%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="9"/><text x="0.2500%" y="751.50"></text></g><g><title>lab4::student::Student::build_idea (3 samples, 0.46%)</title><rect x="0.9174%" y="725" width="0.4587%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="3"/><text x="1.1674%" y="735.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 0.31%)</title><rect x="1.0703%" y="709" width="0.3058%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="2"/><text x="1.3203%" y="719.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (2 samples, 0.31%)</title><rect x="1.0703%" y="693" width="0.3058%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="2"/><text x="1.3203%" y="703.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.15%)</title><rect x="1.2232%" y="677" width="0.1529%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="1"/><text x="1.4732%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="2.1407%" y="725" width="0.1529%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="2.3907%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="2.1407%" y="709" width="0.1529%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="2.3907%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="2.1407%" y="693" width="0.1529%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="2.3907%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="2.1407%" y="677" width="0.1529%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="1"/><text x="2.3907%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="2.1407%" y="661" width="0.1529%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="1"/><text x="2.3907%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.15%)</title><rect x="2.1407%" y="645" width="0.1529%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="1"/><text x="2.3907%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="2.1407%" y="629" width="0.1529%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="1"/><text x="2.3907%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="725" width="0.3058%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="2"/><text x="2.5436%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="709" width="0.3058%" height="15" fill="rgb(210,31,41)" fg:x="15" fg:w="2"/><text x="2.5436%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="693" width="0.3058%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="2"/><text x="2.5436%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="677" width="0.3058%" height="15" fill="rgb(226,26,5)" fg:x="15" fg:w="2"/><text x="2.5436%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="661" width="0.3058%" height="15" fill="rgb(249,33,26)" fg:x="15" fg:w="2"/><text x="2.5436%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="645" width="0.3058%" height="15" fill="rgb(235,183,28)" fg:x="15" fg:w="2"/><text x="2.5436%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="629" width="0.3058%" height="15" fill="rgb(221,5,38)" fg:x="15" fg:w="2"/><text x="2.5436%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="2.2936%" y="613" width="0.3058%" height="15" fill="rgb(247,18,42)" fg:x="15" fg:w="2"/><text x="2.5436%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.4465%" y="597" width="0.1529%" height="15" fill="rgb(241,131,45)" fg:x="16" fg:w="1"/><text x="2.6965%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.4465%" y="581" width="0.1529%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="1"/><text x="2.6965%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.4465%" y="565" width="0.1529%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="2.6965%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.4465%" y="549" width="0.1529%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="1"/><text x="2.6965%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.4465%" y="533" width="0.1529%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="1"/><text x="2.6965%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.4465%" y="517" width="0.1529%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="1"/><text x="2.6965%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="2.5994%" y="725" width="0.1529%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="1"/><text x="2.8494%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="2.7523%" y="725" width="0.1529%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="1"/><text x="3.0023%" y="735.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (1 samples, 0.15%)</title><rect x="2.9052%" y="725" width="0.1529%" height="15" fill="rgb(213,181,19)" fg:x="19" fg:w="1"/><text x="3.1552%" y="735.50"></text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="1.3761%" y="741" width="1.8349%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="12"/><text x="1.6261%" y="751.50">[..</text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.15%)</title><rect x="3.0581%" y="725" width="0.1529%" height="15" fill="rgb(241,83,37)" fg:x="20" fg:w="1"/><text x="3.3081%" y="735.50"></text></g><g><title>[unknown] (49 samples, 7.49%)</title><rect x="3.2110%" y="725" width="7.4924%" height="15" fill="rgb(233,36,39)" fg:x="21" fg:w="49"/><text x="3.4610%" y="735.50">[unknown]</text></g><g><title>[unknown] (49 samples, 7.49%)</title><rect x="3.2110%" y="709" width="7.4924%" height="15" fill="rgb(226,3,54)" fg:x="21" fg:w="49"/><text x="3.4610%" y="719.50">[unknown]</text></g><g><title>[unknown] (49 samples, 7.49%)</title><rect x="3.2110%" y="693" width="7.4924%" height="15" fill="rgb(245,192,40)" fg:x="21" fg:w="49"/><text x="3.4610%" y="703.50">[unknown]</text></g><g><title>[unknown] (49 samples, 7.49%)</title><rect x="3.2110%" y="677" width="7.4924%" height="15" fill="rgb(238,167,29)" fg:x="21" fg:w="49"/><text x="3.4610%" y="687.50">[unknown]</text></g><g><title>[unknown] (49 samples, 7.49%)</title><rect x="3.2110%" y="661" width="7.4924%" height="15" fill="rgb(232,182,51)" fg:x="21" fg:w="49"/><text x="3.4610%" y="671.50">[unknown]</text></g><g><title>[unknown] (48 samples, 7.34%)</title><rect x="3.3639%" y="645" width="7.3394%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="48"/><text x="3.6139%" y="655.50">[unknown]</text></g><g><title>[unknown] (48 samples, 7.34%)</title><rect x="3.3639%" y="629" width="7.3394%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="48"/><text x="3.6139%" y="639.50">[unknown]</text></g><g><title>[unknown] (48 samples, 7.34%)</title><rect x="3.3639%" y="613" width="7.3394%" height="15" fill="rgb(235,93,37)" fg:x="22" fg:w="48"/><text x="3.6139%" y="623.50">[unknown]</text></g><g><title>lab4::idea::IdeaGenerator::run (2 samples, 0.31%)</title><rect x="10.7034%" y="517" width="0.3058%" height="15" fill="rgb(213,116,39)" fg:x="70" fg:w="2"/><text x="10.9534%" y="527.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (2 samples, 0.31%)</title><rect x="10.7034%" y="501" width="0.3058%" height="15" fill="rgb(222,207,29)" fg:x="70" fg:w="2"/><text x="10.9534%" y="511.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (2 samples, 0.31%)</title><rect x="10.7034%" y="485" width="0.3058%" height="15" fill="rgb(206,96,30)" fg:x="70" fg:w="2"/><text x="10.9534%" y="495.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (2 samples, 0.31%)</title><rect x="10.7034%" y="469" width="0.3058%" height="15" fill="rgb(218,138,4)" fg:x="70" fg:w="2"/><text x="10.9534%" y="479.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (2 samples, 0.31%)</title><rect x="10.7034%" y="453" width="0.3058%" height="15" fill="rgb(250,191,14)" fg:x="70" fg:w="2"/><text x="10.9534%" y="463.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (2 samples, 0.31%)</title><rect x="10.7034%" y="437" width="0.3058%" height="15" fill="rgb(239,60,40)" fg:x="70" fg:w="2"/><text x="10.9534%" y="447.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.31%)</title><rect x="10.7034%" y="421" width="0.3058%" height="15" fill="rgb(206,27,48)" fg:x="70" fg:w="2"/><text x="10.9534%" y="431.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.31%)</title><rect x="10.7034%" y="405" width="0.3058%" height="15" fill="rgb(225,35,8)" fg:x="70" fg:w="2"/><text x="10.9534%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="10.7034%" y="389" width="0.3058%" height="15" fill="rgb(250,213,24)" fg:x="70" fg:w="2"/><text x="10.9534%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="10.8563%" y="373" width="0.1529%" height="15" fill="rgb(247,123,22)" fg:x="71" fg:w="1"/><text x="11.1063%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="10.8563%" y="357" width="0.1529%" height="15" fill="rgb(231,138,38)" fg:x="71" fg:w="1"/><text x="11.1063%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="10.8563%" y="341" width="0.1529%" height="15" fill="rgb(231,145,46)" fg:x="71" fg:w="1"/><text x="11.1063%" y="351.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (1 samples, 0.15%)</title><rect x="11.1621%" y="501" width="0.1529%" height="15" fill="rgb(251,118,11)" fg:x="73" fg:w="1"/><text x="11.4121%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (1 samples, 0.15%)</title><rect x="11.1621%" y="485" width="0.1529%" height="15" fill="rgb(217,147,25)" fg:x="73" fg:w="1"/><text x="11.4121%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (1 samples, 0.15%)</title><rect x="11.1621%" y="469" width="0.1529%" height="15" fill="rgb(247,81,37)" fg:x="73" fg:w="1"/><text x="11.4121%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 0.15%)</title><rect x="11.1621%" y="453" width="0.1529%" height="15" fill="rgb(209,12,38)" fg:x="73" fg:w="1"/><text x="11.4121%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (1 samples, 0.15%)</title><rect x="11.1621%" y="437" width="0.1529%" height="15" fill="rgb(227,1,9)" fg:x="73" fg:w="1"/><text x="11.4121%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="421" width="0.1529%" height="15" fill="rgb(248,47,43)" fg:x="73" fg:w="1"/><text x="11.4121%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="405" width="0.1529%" height="15" fill="rgb(221,10,30)" fg:x="73" fg:w="1"/><text x="11.4121%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="389" width="0.1529%" height="15" fill="rgb(210,229,1)" fg:x="73" fg:w="1"/><text x="11.4121%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="373" width="0.1529%" height="15" fill="rgb(222,148,37)" fg:x="73" fg:w="1"/><text x="11.4121%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="357" width="0.1529%" height="15" fill="rgb(234,67,33)" fg:x="73" fg:w="1"/><text x="11.4121%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="341" width="0.1529%" height="15" fill="rgb(247,98,35)" fg:x="73" fg:w="1"/><text x="11.4121%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="325" width="0.1529%" height="15" fill="rgb(247,138,52)" fg:x="73" fg:w="1"/><text x="11.4121%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="309" width="0.1529%" height="15" fill="rgb(213,79,30)" fg:x="73" fg:w="1"/><text x="11.4121%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="293" width="0.1529%" height="15" fill="rgb(246,177,23)" fg:x="73" fg:w="1"/><text x="11.4121%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="277" width="0.1529%" height="15" fill="rgb(230,62,27)" fg:x="73" fg:w="1"/><text x="11.4121%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.1621%" y="261" width="0.1529%" height="15" fill="rgb(216,154,8)" fg:x="73" fg:w="1"/><text x="11.4121%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="11.9266%" y="309" width="0.1529%" height="15" fill="rgb(244,35,45)" fg:x="78" fg:w="1"/><text x="12.1766%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="293" width="0.3058%" height="15" fill="rgb(251,115,12)" fg:x="82" fg:w="2"/><text x="12.7882%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="277" width="0.3058%" height="15" fill="rgb(240,54,50)" fg:x="82" fg:w="2"/><text x="12.7882%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="261" width="0.3058%" height="15" fill="rgb(233,84,52)" fg:x="82" fg:w="2"/><text x="12.7882%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="245" width="0.3058%" height="15" fill="rgb(207,117,47)" fg:x="82" fg:w="2"/><text x="12.7882%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="229" width="0.3058%" height="15" fill="rgb(249,43,39)" fg:x="82" fg:w="2"/><text x="12.7882%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="213" width="0.3058%" height="15" fill="rgb(209,38,44)" fg:x="82" fg:w="2"/><text x="12.7882%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="197" width="0.3058%" height="15" fill="rgb(236,212,23)" fg:x="82" fg:w="2"/><text x="12.7882%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="12.5382%" y="181" width="0.3058%" height="15" fill="rgb(242,79,21)" fg:x="82" fg:w="2"/><text x="12.7882%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.6911%" y="165" width="0.1529%" height="15" fill="rgb(211,96,35)" fg:x="83" fg:w="1"/><text x="12.9411%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.8440%" y="277" width="0.1529%" height="15" fill="rgb(253,215,40)" fg:x="84" fg:w="1"/><text x="13.0940%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.8440%" y="261" width="0.1529%" height="15" fill="rgb(211,81,21)" fg:x="84" fg:w="1"/><text x="13.0940%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.8440%" y="245" width="0.1529%" height="15" fill="rgb(208,190,38)" fg:x="84" fg:w="1"/><text x="13.0940%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.8440%" y="229" width="0.1529%" height="15" fill="rgb(235,213,38)" fg:x="84" fg:w="1"/><text x="13.0940%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.8440%" y="213" width="0.1529%" height="15" fill="rgb(237,122,38)" fg:x="84" fg:w="1"/><text x="13.0940%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="12.8440%" y="197" width="0.1529%" height="15" fill="rgb(244,218,35)" fg:x="84" fg:w="1"/><text x="13.0940%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 4.13%)</title><rect x="11.3150%" y="421" width="4.1284%" height="15" fill="rgb(240,68,47)" fg:x="74" fg:w="27"/><text x="11.5650%" y="431.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 4.13%)</title><rect x="11.3150%" y="405" width="4.1284%" height="15" fill="rgb(210,16,53)" fg:x="74" fg:w="27"/><text x="11.5650%" y="415.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 4.13%)</title><rect x="11.3150%" y="389" width="4.1284%" height="15" fill="rgb(235,124,12)" fg:x="74" fg:w="27"/><text x="11.5650%" y="399.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 4.13%)</title><rect x="11.3150%" y="373" width="4.1284%" height="15" fill="rgb(224,169,11)" fg:x="74" fg:w="27"/><text x="11.5650%" y="383.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 4.13%)</title><rect x="11.3150%" y="357" width="4.1284%" height="15" fill="rgb(250,166,2)" fg:x="74" fg:w="27"/><text x="11.5650%" y="367.50">allo..</text></g><g><title>alloc::alloc::alloc (27 samples, 4.13%)</title><rect x="11.3150%" y="341" width="4.1284%" height="15" fill="rgb(242,216,29)" fg:x="74" fg:w="27"/><text x="11.5650%" y="351.50">allo..</text></g><g><title>__GI___libc_malloc (27 samples, 4.13%)</title><rect x="11.3150%" y="325" width="4.1284%" height="15" fill="rgb(230,116,27)" fg:x="74" fg:w="27"/><text x="11.5650%" y="335.50">__GI..</text></g><g><title>_int_malloc (22 samples, 3.36%)</title><rect x="12.0795%" y="309" width="3.3639%" height="15" fill="rgb(228,99,48)" fg:x="79" fg:w="22"/><text x="12.3295%" y="319.50">_in..</text></g><g><title>sysmalloc (17 samples, 2.60%)</title><rect x="12.8440%" y="293" width="2.5994%" height="15" fill="rgb(253,11,6)" fg:x="84" fg:w="17"/><text x="13.0940%" y="303.50">sy..</text></g><g><title>__GI___mprotect (16 samples, 2.45%)</title><rect x="12.9969%" y="277" width="2.4465%" height="15" fill="rgb(247,143,39)" fg:x="85" fg:w="16"/><text x="13.2469%" y="287.50">__..</text></g><g><title>[unknown] (16 samples, 2.45%)</title><rect x="12.9969%" y="261" width="2.4465%" height="15" fill="rgb(236,97,10)" fg:x="85" fg:w="16"/><text x="13.2469%" y="271.50">[u..</text></g><g><title>[unknown] (16 samples, 2.45%)</title><rect x="12.9969%" y="245" width="2.4465%" height="15" fill="rgb(233,208,19)" fg:x="85" fg:w="16"/><text x="13.2469%" y="255.50">[u..</text></g><g><title>[unknown] (16 samples, 2.45%)</title><rect x="12.9969%" y="229" width="2.4465%" height="15" fill="rgb(216,164,2)" fg:x="85" fg:w="16"/><text x="13.2469%" y="239.50">[u..</text></g><g><title>[unknown] (16 samples, 2.45%)</title><rect x="12.9969%" y="213" width="2.4465%" height="15" fill="rgb(220,129,5)" fg:x="85" fg:w="16"/><text x="13.2469%" y="223.50">[u..</text></g><g><title>[unknown] (15 samples, 2.29%)</title><rect x="13.1498%" y="197" width="2.2936%" height="15" fill="rgb(242,17,10)" fg:x="86" fg:w="15"/><text x="13.3998%" y="207.50">[..</text></g><g><title>[unknown] (15 samples, 2.29%)</title><rect x="13.1498%" y="181" width="2.2936%" height="15" fill="rgb(242,107,0)" fg:x="86" fg:w="15"/><text x="13.3998%" y="191.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="13.3028%" y="165" width="2.1407%" height="15" fill="rgb(251,28,31)" fg:x="87" fg:w="14"/><text x="13.5528%" y="175.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="13.3028%" y="149" width="2.1407%" height="15" fill="rgb(233,223,10)" fg:x="87" fg:w="14"/><text x="13.5528%" y="159.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="13.3028%" y="133" width="2.1407%" height="15" fill="rgb(215,21,27)" fg:x="87" fg:w="14"/><text x="13.5528%" y="143.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="13.3028%" y="117" width="2.1407%" height="15" fill="rgb(232,23,21)" fg:x="87" fg:w="14"/><text x="13.5528%" y="127.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="13.3028%" y="101" width="2.1407%" height="15" fill="rgb(244,5,23)" fg:x="87" fg:w="14"/><text x="13.5528%" y="111.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="13.4557%" y="85" width="1.9878%" height="15" fill="rgb(226,81,46)" fg:x="88" fg:w="13"/><text x="13.7057%" y="95.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="13.4557%" y="69" width="1.9878%" height="15" fill="rgb(247,70,30)" fg:x="88" fg:w="13"/><text x="13.7057%" y="79.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="13.4557%" y="53" width="1.9878%" height="15" fill="rgb(212,68,19)" fg:x="88" fg:w="13"/><text x="13.7057%" y="63.50">[..</text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="15.2905%" y="37" width="0.1529%" height="15" fill="rgb(240,187,13)" fg:x="100" fg:w="1"/><text x="15.5405%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (30 samples, 4.59%)</title><rect x="11.3150%" y="501" width="4.5872%" height="15" fill="rgb(223,113,26)" fg:x="74" fg:w="30"/><text x="11.5650%" y="511.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 4.59%)</title><rect x="11.3150%" y="485" width="4.5872%" height="15" fill="rgb(206,192,2)" fg:x="74" fg:w="30"/><text x="11.5650%" y="495.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 4.59%)</title><rect x="11.3150%" y="469" width="4.5872%" height="15" fill="rgb(241,108,4)" fg:x="74" fg:w="30"/><text x="11.5650%" y="479.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (30 samples, 4.59%)</title><rect x="11.3150%" y="453" width="4.5872%" height="15" fill="rgb(247,173,49)" fg:x="74" fg:w="30"/><text x="11.5650%" y="463.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 4.59%)</title><rect x="11.3150%" y="437" width="4.5872%" height="15" fill="rgb(224,114,35)" fg:x="74" fg:w="30"/><text x="11.5650%" y="447.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.46%)</title><rect x="15.4434%" y="421" width="0.4587%" height="15" fill="rgb(245,159,27)" fg:x="101" fg:w="3"/><text x="15.6934%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="15.4434%" y="405" width="0.4587%" height="15" fill="rgb(245,172,44)" fg:x="101" fg:w="3"/><text x="15.6934%" y="415.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.46%)</title><rect x="15.4434%" y="389" width="0.4587%" height="15" fill="rgb(236,23,11)" fg:x="101" fg:w="3"/><text x="15.6934%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="15.7492%" y="373" width="0.1529%" height="15" fill="rgb(205,117,38)" fg:x="103" fg:w="1"/><text x="15.9992%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="15.7492%" y="357" width="0.1529%" height="15" fill="rgb(237,72,25)" fg:x="103" fg:w="1"/><text x="15.9992%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="15.9021%" y="501" width="0.1529%" height="15" fill="rgb(244,70,9)" fg:x="104" fg:w="1"/><text x="16.1521%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9725%" y="453" width="0.1529%" height="15" fill="rgb(217,125,39)" fg:x="111" fg:w="1"/><text x="17.2225%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9725%" y="437" width="0.1529%" height="15" fill="rgb(235,36,10)" fg:x="111" fg:w="1"/><text x="17.2225%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9725%" y="421" width="0.1529%" height="15" fill="rgb(251,123,47)" fg:x="111" fg:w="1"/><text x="17.2225%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9725%" y="405" width="0.1529%" height="15" fill="rgb(221,13,13)" fg:x="111" fg:w="1"/><text x="17.2225%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="17.1254%" y="357" width="0.3058%" height="15" fill="rgb(238,131,9)" fg:x="112" fg:w="2"/><text x="17.3754%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="341" width="0.1529%" height="15" fill="rgb(211,50,8)" fg:x="113" fg:w="1"/><text x="17.5283%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="325" width="0.1529%" height="15" fill="rgb(245,182,24)" fg:x="113" fg:w="1"/><text x="17.5283%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="309" width="0.1529%" height="15" fill="rgb(242,14,37)" fg:x="113" fg:w="1"/><text x="17.5283%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="293" width="0.1529%" height="15" fill="rgb(246,228,12)" fg:x="113" fg:w="1"/><text x="17.5283%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="277" width="0.1529%" height="15" fill="rgb(213,55,15)" fg:x="113" fg:w="1"/><text x="17.5283%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="261" width="0.1529%" height="15" fill="rgb(209,9,3)" fg:x="113" fg:w="1"/><text x="17.5283%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="245" width="0.1529%" height="15" fill="rgb(230,59,30)" fg:x="113" fg:w="1"/><text x="17.5283%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="229" width="0.1529%" height="15" fill="rgb(209,121,21)" fg:x="113" fg:w="1"/><text x="17.5283%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.2783%" y="213" width="0.1529%" height="15" fill="rgb(220,109,13)" fg:x="113" fg:w="1"/><text x="17.5283%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="17.5841%" y="341" width="0.3058%" height="15" fill="rgb(232,18,1)" fg:x="115" fg:w="2"/><text x="17.8341%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="17.5841%" y="325" width="0.3058%" height="15" fill="rgb(215,41,42)" fg:x="115" fg:w="2"/><text x="17.8341%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="17.5841%" y="309" width="0.3058%" height="15" fill="rgb(224,123,36)" fg:x="115" fg:w="2"/><text x="17.8341%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="17.5841%" y="293" width="0.3058%" height="15" fill="rgb(240,125,3)" fg:x="115" fg:w="2"/><text x="17.8341%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="17.5841%" y="277" width="0.3058%" height="15" fill="rgb(205,98,50)" fg:x="115" fg:w="2"/><text x="17.8341%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.7370%" y="261" width="0.1529%" height="15" fill="rgb(205,185,37)" fg:x="116" fg:w="1"/><text x="17.9870%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.7370%" y="245" width="0.1529%" height="15" fill="rgb(238,207,15)" fg:x="116" fg:w="1"/><text x="17.9870%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.7370%" y="229" width="0.1529%" height="15" fill="rgb(213,199,42)" fg:x="116" fg:w="1"/><text x="17.9870%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.92%)</title><rect x="17.1254%" y="453" width="0.9174%" height="15" fill="rgb(235,201,11)" fg:x="112" fg:w="6"/><text x="17.3754%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.92%)</title><rect x="17.1254%" y="437" width="0.9174%" height="15" fill="rgb(207,46,11)" fg:x="112" fg:w="6"/><text x="17.3754%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.92%)</title><rect x="17.1254%" y="421" width="0.9174%" height="15" fill="rgb(241,35,35)" fg:x="112" fg:w="6"/><text x="17.3754%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.92%)</title><rect x="17.1254%" y="405" width="0.9174%" height="15" fill="rgb(243,32,47)" fg:x="112" fg:w="6"/><text x="17.3754%" y="415.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.92%)</title><rect x="17.1254%" y="389" width="0.9174%" height="15" fill="rgb(247,202,23)" fg:x="112" fg:w="6"/><text x="17.3754%" y="399.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.92%)</title><rect x="17.1254%" y="373" width="0.9174%" height="15" fill="rgb(219,102,11)" fg:x="112" fg:w="6"/><text x="17.3754%" y="383.50"></text></g><g><title>_int_malloc (4 samples, 0.61%)</title><rect x="17.4312%" y="357" width="0.6116%" height="15" fill="rgb(243,110,44)" fg:x="114" fg:w="4"/><text x="17.6812%" y="367.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="17.8899%" y="341" width="0.1529%" height="15" fill="rgb(222,74,54)" fg:x="117" fg:w="1"/><text x="18.1399%" y="351.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="17.8899%" y="325" width="0.1529%" height="15" fill="rgb(216,99,12)" fg:x="117" fg:w="1"/><text x="18.1399%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="309" width="0.1529%" height="15" fill="rgb(226,22,26)" fg:x="117" fg:w="1"/><text x="18.1399%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="293" width="0.1529%" height="15" fill="rgb(217,163,10)" fg:x="117" fg:w="1"/><text x="18.1399%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="277" width="0.1529%" height="15" fill="rgb(213,25,53)" fg:x="117" fg:w="1"/><text x="18.1399%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="261" width="0.1529%" height="15" fill="rgb(252,105,26)" fg:x="117" fg:w="1"/><text x="18.1399%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="245" width="0.1529%" height="15" fill="rgb(220,39,43)" fg:x="117" fg:w="1"/><text x="18.1399%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="229" width="0.1529%" height="15" fill="rgb(229,68,48)" fg:x="117" fg:w="1"/><text x="18.1399%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="213" width="0.1529%" height="15" fill="rgb(252,8,32)" fg:x="117" fg:w="1"/><text x="18.1399%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="197" width="0.1529%" height="15" fill="rgb(223,20,43)" fg:x="117" fg:w="1"/><text x="18.1399%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.8899%" y="181" width="0.1529%" height="15" fill="rgb(229,81,49)" fg:x="117" fg:w="1"/><text x="18.1399%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (7 samples, 1.07%)</title><rect x="18.0428%" y="453" width="1.0703%" height="15" fill="rgb(236,28,36)" fg:x="118" fg:w="7"/><text x="18.2928%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 1.07%)</title><rect x="18.0428%" y="437" width="1.0703%" height="15" fill="rgb(249,185,26)" fg:x="118" fg:w="7"/><text x="18.2928%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.46%)</title><rect x="19.1131%" y="453" width="0.4587%" height="15" fill="rgb(249,174,33)" fg:x="125" fg:w="3"/><text x="19.3631%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.46%)</title><rect x="19.1131%" y="437" width="0.4587%" height="15" fill="rgb(233,201,37)" fg:x="125" fg:w="3"/><text x="19.3631%" y="447.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.15%)</title><rect x="19.5719%" y="453" width="0.1529%" height="15" fill="rgb(221,78,26)" fg:x="128" fg:w="1"/><text x="19.8219%" y="463.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.15%)</title><rect x="19.5719%" y="437" width="0.1529%" height="15" fill="rgb(250,127,30)" fg:x="128" fg:w="1"/><text x="19.8219%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="421" width="0.1529%" height="15" fill="rgb(230,49,44)" fg:x="128" fg:w="1"/><text x="19.8219%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="405" width="0.1529%" height="15" fill="rgb(229,67,23)" fg:x="128" fg:w="1"/><text x="19.8219%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="389" width="0.1529%" height="15" fill="rgb(249,83,47)" fg:x="128" fg:w="1"/><text x="19.8219%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="373" width="0.1529%" height="15" fill="rgb(215,43,3)" fg:x="128" fg:w="1"/><text x="19.8219%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="357" width="0.1529%" height="15" fill="rgb(238,154,13)" fg:x="128" fg:w="1"/><text x="19.8219%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="341" width="0.1529%" height="15" fill="rgb(219,56,2)" fg:x="128" fg:w="1"/><text x="19.8219%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="325" width="0.1529%" height="15" fill="rgb(233,0,4)" fg:x="128" fg:w="1"/><text x="19.8219%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="309" width="0.1529%" height="15" fill="rgb(235,30,7)" fg:x="128" fg:w="1"/><text x="19.8219%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="293" width="0.1529%" height="15" fill="rgb(250,79,13)" fg:x="128" fg:w="1"/><text x="19.8219%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="19.5719%" y="277" width="0.1529%" height="15" fill="rgb(211,146,34)" fg:x="128" fg:w="1"/><text x="19.8219%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.61%)</title><rect x="19.7248%" y="437" width="0.6116%" height="15" fill="rgb(228,22,38)" fg:x="129" fg:w="4"/><text x="19.9748%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.61%)</title><rect x="19.7248%" y="421" width="0.6116%" height="15" fill="rgb(235,168,5)" fg:x="129" fg:w="4"/><text x="19.9748%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (4 samples, 0.61%)</title><rect x="19.7248%" y="405" width="0.6116%" height="15" fill="rgb(221,155,16)" fg:x="129" fg:w="4"/><text x="19.9748%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="19.7248%" y="389" width="0.6116%" height="15" fill="rgb(215,215,53)" fg:x="129" fg:w="4"/><text x="19.9748%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="373" width="0.1529%" height="15" fill="rgb(223,4,10)" fg:x="132" fg:w="1"/><text x="20.4335%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="357" width="0.1529%" height="15" fill="rgb(234,103,6)" fg:x="132" fg:w="1"/><text x="20.4335%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="341" width="0.1529%" height="15" fill="rgb(227,97,0)" fg:x="132" fg:w="1"/><text x="20.4335%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="325" width="0.1529%" height="15" fill="rgb(234,150,53)" fg:x="132" fg:w="1"/><text x="20.4335%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="309" width="0.1529%" height="15" fill="rgb(228,201,54)" fg:x="132" fg:w="1"/><text x="20.4335%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="293" width="0.1529%" height="15" fill="rgb(222,22,37)" fg:x="132" fg:w="1"/><text x="20.4335%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="277" width="0.1529%" height="15" fill="rgb(237,53,32)" fg:x="132" fg:w="1"/><text x="20.4335%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="261" width="0.1529%" height="15" fill="rgb(233,25,53)" fg:x="132" fg:w="1"/><text x="20.4335%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="245" width="0.1529%" height="15" fill="rgb(210,40,34)" fg:x="132" fg:w="1"/><text x="20.4335%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="229" width="0.1529%" height="15" fill="rgb(241,220,44)" fg:x="132" fg:w="1"/><text x="20.4335%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="20.1835%" y="213" width="0.1529%" height="15" fill="rgb(235,28,35)" fg:x="132" fg:w="1"/><text x="20.4335%" y="223.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (38 samples, 5.81%)</title><rect x="16.5138%" y="469" width="5.8104%" height="15" fill="rgb(210,56,17)" fg:x="108" fg:w="38"/><text x="16.7638%" y="479.50">crossbe..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (17 samples, 2.60%)</title><rect x="19.7248%" y="453" width="2.5994%" height="15" fill="rgb(224,130,29)" fg:x="129" fg:w="17"/><text x="19.9748%" y="463.50">cr..</text></g><g><title>core::sync::atomic::spin_loop_hint (13 samples, 1.99%)</title><rect x="20.3364%" y="437" width="1.9878%" height="15" fill="rgb(235,212,8)" fg:x="133" fg:w="13"/><text x="20.5864%" y="447.50">c..</text></g><g><title>core::hint::spin_loop (13 samples, 1.99%)</title><rect x="20.3364%" y="421" width="1.9878%" height="15" fill="rgb(223,33,50)" fg:x="133" fg:w="13"/><text x="20.5864%" y="431.50">c..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 1.99%)</title><rect x="20.3364%" y="405" width="1.9878%" height="15" fill="rgb(219,149,13)" fg:x="133" fg:w="13"/><text x="20.5864%" y="415.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.46%)</title><rect x="22.3242%" y="453" width="0.4587%" height="15" fill="rgb(250,156,29)" fg:x="146" fg:w="3"/><text x="22.5742%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.46%)</title><rect x="22.3242%" y="437" width="0.4587%" height="15" fill="rgb(216,193,19)" fg:x="146" fg:w="3"/><text x="22.5742%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (1 samples, 0.15%)</title><rect x="22.7829%" y="437" width="0.1529%" height="15" fill="rgb(216,135,14)" fg:x="149" fg:w="1"/><text x="23.0329%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.15%)</title><rect x="22.7829%" y="421" width="0.1529%" height="15" fill="rgb(241,47,5)" fg:x="149" fg:w="1"/><text x="23.0329%" y="431.50"></text></g><g><title>__GI___sched_yield (15 samples, 2.29%)</title><rect x="22.9358%" y="405" width="2.2936%" height="15" fill="rgb(233,42,35)" fg:x="150" fg:w="15"/><text x="23.1858%" y="415.50">_..</text></g><g><title>[unknown] (15 samples, 2.29%)</title><rect x="22.9358%" y="389" width="2.2936%" height="15" fill="rgb(231,13,6)" fg:x="150" fg:w="15"/><text x="23.1858%" y="399.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="23.2416%" y="373" width="1.9878%" height="15" fill="rgb(207,181,40)" fg:x="152" fg:w="13"/><text x="23.4916%" y="383.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="23.2416%" y="357" width="1.9878%" height="15" fill="rgb(254,173,49)" fg:x="152" fg:w="13"/><text x="23.4916%" y="367.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="23.2416%" y="341" width="1.9878%" height="15" fill="rgb(221,1,38)" fg:x="152" fg:w="13"/><text x="23.4916%" y="351.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="23.2416%" y="325" width="1.9878%" height="15" fill="rgb(206,124,46)" fg:x="152" fg:w="13"/><text x="23.4916%" y="335.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="23.3945%" y="309" width="1.8349%" height="15" fill="rgb(249,21,11)" fg:x="153" fg:w="12"/><text x="23.6445%" y="319.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="23.3945%" y="293" width="1.8349%" height="15" fill="rgb(222,201,40)" fg:x="153" fg:w="12"/><text x="23.6445%" y="303.50">[..</text></g><g><title>[unknown] (9 samples, 1.38%)</title><rect x="23.8532%" y="277" width="1.3761%" height="15" fill="rgb(235,61,29)" fg:x="156" fg:w="9"/><text x="24.1032%" y="287.50"></text></g><g><title>[unknown] (9 samples, 1.38%)</title><rect x="23.8532%" y="261" width="1.3761%" height="15" fill="rgb(219,207,3)" fg:x="156" fg:w="9"/><text x="24.1032%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="24.3119%" y="245" width="0.9174%" height="15" fill="rgb(222,56,46)" fg:x="159" fg:w="6"/><text x="24.5619%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="24.3119%" y="229" width="0.9174%" height="15" fill="rgb(239,76,54)" fg:x="159" fg:w="6"/><text x="24.5619%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="24.3119%" y="213" width="0.9174%" height="15" fill="rgb(231,124,27)" fg:x="159" fg:w="6"/><text x="24.5619%" y="223.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (16 samples, 2.45%)</title><rect x="22.9358%" y="437" width="2.4465%" height="15" fill="rgb(249,195,6)" fg:x="150" fg:w="16"/><text x="23.1858%" y="447.50">cr..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (16 samples, 2.45%)</title><rect x="22.9358%" y="421" width="2.4465%" height="15" fill="rgb(237,174,47)" fg:x="150" fg:w="16"/><text x="23.1858%" y="431.50">cr..</text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.15%)</title><rect x="25.2294%" y="405" width="0.1529%" height="15" fill="rgb(206,201,31)" fg:x="165" fg:w="1"/><text x="25.4794%" y="415.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.15%)</title><rect x="25.2294%" y="389" width="0.1529%" height="15" fill="rgb(231,57,52)" fg:x="165" fg:w="1"/><text x="25.4794%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.15%)</title><rect x="25.2294%" y="373" width="0.1529%" height="15" fill="rgb(248,177,22)" fg:x="165" fg:w="1"/><text x="25.4794%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="357" width="0.1529%" height="15" fill="rgb(215,211,37)" fg:x="165" fg:w="1"/><text x="25.4794%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="341" width="0.1529%" height="15" fill="rgb(241,128,51)" fg:x="165" fg:w="1"/><text x="25.4794%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="325" width="0.1529%" height="15" fill="rgb(227,165,31)" fg:x="165" fg:w="1"/><text x="25.4794%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="309" width="0.1529%" height="15" fill="rgb(228,167,24)" fg:x="165" fg:w="1"/><text x="25.4794%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="293" width="0.1529%" height="15" fill="rgb(228,143,12)" fg:x="165" fg:w="1"/><text x="25.4794%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="277" width="0.1529%" height="15" fill="rgb(249,149,8)" fg:x="165" fg:w="1"/><text x="25.4794%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="261" width="0.1529%" height="15" fill="rgb(243,35,44)" fg:x="165" fg:w="1"/><text x="25.4794%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.2294%" y="245" width="0.1529%" height="15" fill="rgb(246,89,9)" fg:x="165" fg:w="1"/><text x="25.4794%" y="255.50"></text></g><g><title>crossbeam_channel::waker::Waker::notify (1 samples, 0.15%)</title><rect x="25.3823%" y="437" width="0.1529%" height="15" fill="rgb(233,213,13)" fg:x="166" fg:w="1"/><text x="25.6323%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.15%)</title><rect x="25.3823%" y="421" width="0.1529%" height="15" fill="rgb(233,141,41)" fg:x="166" fg:w="1"/><text x="25.6323%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.15%)</title><rect x="25.3823%" y="405" width="0.1529%" height="15" fill="rgb(239,167,4)" fg:x="166" fg:w="1"/><text x="25.6323%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="25.3823%" y="389" width="0.1529%" height="15" fill="rgb(209,217,16)" fg:x="166" fg:w="1"/><text x="25.6323%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.15%)</title><rect x="25.5352%" y="421" width="0.1529%" height="15" fill="rgb(219,88,35)" fg:x="167" fg:w="1"/><text x="25.7852%" y="431.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="25.5352%" y="405" width="0.1529%" height="15" fill="rgb(220,193,23)" fg:x="167" fg:w="1"/><text x="25.7852%" y="415.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.15%)</title><rect x="25.5352%" y="389" width="0.1529%" height="15" fill="rgb(230,90,52)" fg:x="167" fg:w="1"/><text x="25.7852%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="373" width="0.1529%" height="15" fill="rgb(252,106,19)" fg:x="167" fg:w="1"/><text x="25.7852%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="357" width="0.1529%" height="15" fill="rgb(206,74,20)" fg:x="167" fg:w="1"/><text x="25.7852%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="341" width="0.1529%" height="15" fill="rgb(230,138,44)" fg:x="167" fg:w="1"/><text x="25.7852%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="325" width="0.1529%" height="15" fill="rgb(235,182,43)" fg:x="167" fg:w="1"/><text x="25.7852%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="309" width="0.1529%" height="15" fill="rgb(242,16,51)" fg:x="167" fg:w="1"/><text x="25.7852%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="293" width="0.1529%" height="15" fill="rgb(248,9,4)" fg:x="167" fg:w="1"/><text x="25.7852%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="277" width="0.1529%" height="15" fill="rgb(210,31,22)" fg:x="167" fg:w="1"/><text x="25.7852%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.5352%" y="261" width="0.1529%" height="15" fill="rgb(239,54,39)" fg:x="167" fg:w="1"/><text x="25.7852%" y="271.50"></text></g><g><title>crossbeam_channel::context::Context::thread_id (1 samples, 0.15%)</title><rect x="25.6881%" y="421" width="0.1529%" height="15" fill="rgb(230,99,41)" fg:x="168" fg:w="1"/><text x="25.9381%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="25.6881%" y="405" width="0.1529%" height="15" fill="rgb(253,106,12)" fg:x="168" fg:w="1"/><text x="25.9381%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.15%)</title><rect x="25.6881%" y="389" width="0.1529%" height="15" fill="rgb(213,46,41)" fg:x="168" fg:w="1"/><text x="25.9381%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.15%)</title><rect x="25.6881%" y="373" width="0.1529%" height="15" fill="rgb(215,133,35)" fg:x="168" fg:w="1"/><text x="25.9381%" y="383.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (79 samples, 12.08%)</title><rect x="16.0550%" y="501" width="12.0795%" height="15" fill="rgb(213,28,5)" fg:x="105" fg:w="79"/><text x="16.3050%" y="511.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (77 samples, 11.77%)</title><rect x="16.3609%" y="485" width="11.7737%" height="15" fill="rgb(215,77,49)" fg:x="107" fg:w="77"/><text x="16.6109%" y="495.50">crossbeam_channel..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (38 samples, 5.81%)</title><rect x="22.3242%" y="469" width="5.8104%" height="15" fill="rgb(248,100,22)" fg:x="146" fg:w="38"/><text x="22.5742%" y="479.50">crossbe..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (35 samples, 5.35%)</title><rect x="22.7829%" y="453" width="5.3517%" height="15" fill="rgb(208,67,9)" fg:x="149" fg:w="35"/><text x="23.0329%" y="463.50">crossbe..</text></g><g><title>crossbeam_channel::waker::Waker::try_select (17 samples, 2.60%)</title><rect x="25.5352%" y="437" width="2.5994%" height="15" fill="rgb(219,133,21)" fg:x="167" fg:w="17"/><text x="25.7852%" y="447.50">cr..</text></g><g><title>crossbeam_channel::context::Context::unpark (15 samples, 2.29%)</title><rect x="25.8410%" y="421" width="2.2936%" height="15" fill="rgb(246,46,29)" fg:x="169" fg:w="15"/><text x="26.0910%" y="431.50">c..</text></g><g><title>std::thread::Thread::unpark (15 samples, 2.29%)</title><rect x="25.8410%" y="405" width="2.2936%" height="15" fill="rgb(246,185,52)" fg:x="169" fg:w="15"/><text x="26.0910%" y="415.50">s..</text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (15 samples, 2.29%)</title><rect x="25.8410%" y="389" width="2.2936%" height="15" fill="rgb(252,136,11)" fg:x="169" fg:w="15"/><text x="26.0910%" y="399.50">s..</text></g><g><title>std::sys::unix::futex::futex_wake (15 samples, 2.29%)</title><rect x="25.8410%" y="373" width="2.2936%" height="15" fill="rgb(219,138,53)" fg:x="169" fg:w="15"/><text x="26.0910%" y="383.50">s..</text></g><g><title>syscall (15 samples, 2.29%)</title><rect x="25.8410%" y="357" width="2.2936%" height="15" fill="rgb(211,51,23)" fg:x="169" fg:w="15"/><text x="26.0910%" y="367.50">s..</text></g><g><title>[unknown] (15 samples, 2.29%)</title><rect x="25.8410%" y="341" width="2.2936%" height="15" fill="rgb(247,221,28)" fg:x="169" fg:w="15"/><text x="26.0910%" y="351.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="25.9939%" y="325" width="2.1407%" height="15" fill="rgb(251,222,45)" fg:x="170" fg:w="14"/><text x="26.2439%" y="335.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="25.9939%" y="309" width="2.1407%" height="15" fill="rgb(217,162,53)" fg:x="170" fg:w="14"/><text x="26.2439%" y="319.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="26.2997%" y="293" width="1.8349%" height="15" fill="rgb(229,93,14)" fg:x="172" fg:w="12"/><text x="26.5497%" y="303.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="26.2997%" y="277" width="1.8349%" height="15" fill="rgb(209,67,49)" fg:x="172" fg:w="12"/><text x="26.5497%" y="287.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="26.2997%" y="261" width="1.8349%" height="15" fill="rgb(213,87,29)" fg:x="172" fg:w="12"/><text x="26.5497%" y="271.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="26.2997%" y="245" width="1.8349%" height="15" fill="rgb(205,151,52)" fg:x="172" fg:w="12"/><text x="26.5497%" y="255.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="26.2997%" y="229" width="1.8349%" height="15" fill="rgb(253,215,39)" fg:x="172" fg:w="12"/><text x="26.5497%" y="239.50">[..</text></g><g><title>[unknown] (11 samples, 1.68%)</title><rect x="26.4526%" y="213" width="1.6820%" height="15" fill="rgb(221,220,41)" fg:x="173" fg:w="11"/><text x="26.7026%" y="223.50"></text></g><g><title>[unknown] (10 samples, 1.53%)</title><rect x="26.6055%" y="197" width="1.5291%" height="15" fill="rgb(218,133,21)" fg:x="174" fg:w="10"/><text x="26.8555%" y="207.50"></text></g><g><title>[unknown] (7 samples, 1.07%)</title><rect x="27.0642%" y="181" width="1.0703%" height="15" fill="rgb(221,193,43)" fg:x="177" fg:w="7"/><text x="27.3142%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="27.2171%" y="165" width="0.9174%" height="15" fill="rgb(240,128,52)" fg:x="178" fg:w="6"/><text x="27.4671%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.15%)</title><rect x="28.1346%" y="325" width="0.1529%" height="15" fill="rgb(253,114,12)" fg:x="184" fg:w="1"/><text x="28.3846%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.15%)</title><rect x="28.1346%" y="309" width="0.1529%" height="15" fill="rgb(215,223,47)" fg:x="184" fg:w="1"/><text x="28.3846%" y="319.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="28.1346%" y="293" width="0.1529%" height="15" fill="rgb(248,225,23)" fg:x="184" fg:w="1"/><text x="28.3846%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.1346%" y="277" width="0.1529%" height="15" fill="rgb(250,108,0)" fg:x="184" fg:w="1"/><text x="28.3846%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.1346%" y="261" width="0.1529%" height="15" fill="rgb(228,208,7)" fg:x="184" fg:w="1"/><text x="28.3846%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.31%)</title><rect x="28.1346%" y="421" width="0.3058%" height="15" fill="rgb(244,45,10)" fg:x="184" fg:w="2"/><text x="28.3846%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.31%)</title><rect x="28.1346%" y="405" width="0.3058%" height="15" fill="rgb(207,125,25)" fg:x="184" fg:w="2"/><text x="28.3846%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.31%)</title><rect x="28.1346%" y="389" width="0.3058%" height="15" fill="rgb(210,195,18)" fg:x="184" fg:w="2"/><text x="28.3846%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.31%)</title><rect x="28.1346%" y="373" width="0.3058%" height="15" fill="rgb(249,80,12)" fg:x="184" fg:w="2"/><text x="28.3846%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.31%)</title><rect x="28.1346%" y="357" width="0.3058%" height="15" fill="rgb(221,65,9)" fg:x="184" fg:w="2"/><text x="28.3846%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.31%)</title><rect x="28.1346%" y="341" width="0.3058%" height="15" fill="rgb(235,49,36)" fg:x="184" fg:w="2"/><text x="28.3846%" y="351.50"></text></g><g><title>lab4::checksum::Checksum::update::{{closure}} (1 samples, 0.15%)</title><rect x="28.2875%" y="325" width="0.1529%" height="15" fill="rgb(225,32,20)" fg:x="185" fg:w="1"/><text x="28.5375%" y="335.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitXor&lt;&amp;u8&gt;&gt;::bitxor (1 samples, 0.15%)</title><rect x="28.2875%" y="309" width="0.1529%" height="15" fill="rgb(215,141,46)" fg:x="185" fg:w="1"/><text x="28.5375%" y="319.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.15%)</title><rect x="28.2875%" y="293" width="0.1529%" height="15" fill="rgb(250,160,47)" fg:x="185" fg:w="1"/><text x="28.5375%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="277" width="0.1529%" height="15" fill="rgb(216,222,40)" fg:x="185" fg:w="1"/><text x="28.5375%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="261" width="0.1529%" height="15" fill="rgb(234,217,39)" fg:x="185" fg:w="1"/><text x="28.5375%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="245" width="0.1529%" height="15" fill="rgb(207,178,40)" fg:x="185" fg:w="1"/><text x="28.5375%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="229" width="0.1529%" height="15" fill="rgb(221,136,13)" fg:x="185" fg:w="1"/><text x="28.5375%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="213" width="0.1529%" height="15" fill="rgb(249,199,10)" fg:x="185" fg:w="1"/><text x="28.5375%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="197" width="0.1529%" height="15" fill="rgb(249,222,13)" fg:x="185" fg:w="1"/><text x="28.5375%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="181" width="0.1529%" height="15" fill="rgb(244,185,38)" fg:x="185" fg:w="1"/><text x="28.5375%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="28.2875%" y="165" width="0.1529%" height="15" fill="rgb(236,202,9)" fg:x="185" fg:w="1"/><text x="28.5375%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.46%)</title><rect x="28.1346%" y="485" width="0.4587%" height="15" fill="rgb(250,229,37)" fg:x="184" fg:w="3"/><text x="28.3846%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.46%)</title><rect x="28.1346%" y="469" width="0.4587%" height="15" fill="rgb(206,174,23)" fg:x="184" fg:w="3"/><text x="28.3846%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.46%)</title><rect x="28.1346%" y="453" width="0.4587%" height="15" fill="rgb(211,33,43)" fg:x="184" fg:w="3"/><text x="28.3846%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.46%)</title><rect x="28.1346%" y="437" width="0.4587%" height="15" fill="rgb(245,58,50)" fg:x="184" fg:w="3"/><text x="28.3846%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="28.4404%" y="421" width="0.1529%" height="15" fill="rgb(244,68,36)" fg:x="186" fg:w="1"/><text x="28.6904%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="28.4404%" y="405" width="0.1529%" height="15" fill="rgb(232,229,15)" fg:x="186" fg:w="1"/><text x="28.6904%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="28.4404%" y="389" width="0.1529%" height="15" fill="rgb(254,30,23)" fg:x="186" fg:w="1"/><text x="28.6904%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="28.4404%" y="373" width="0.1529%" height="15" fill="rgb(235,160,14)" fg:x="186" fg:w="1"/><text x="28.6904%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.15%)</title><rect x="28.4404%" y="357" width="0.1529%" height="15" fill="rgb(212,155,44)" fg:x="186" fg:w="1"/><text x="28.6904%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.15%)</title><rect x="28.4404%" y="341" width="0.1529%" height="15" fill="rgb(226,2,50)" fg:x="186" fg:w="1"/><text x="28.6904%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="28.5933%" y="389" width="0.1529%" height="15" fill="rgb(234,177,6)" fg:x="187" fg:w="1"/><text x="28.8433%" y="399.50"></text></g><g><title>__rust_dealloc (1 samples, 0.15%)</title><rect x="28.7462%" y="389" width="0.1529%" height="15" fill="rgb(217,24,9)" fg:x="188" fg:w="1"/><text x="28.9962%" y="399.50"></text></g><g><title>lab4::checksum::Checksum::update (7 samples, 1.07%)</title><rect x="28.1346%" y="501" width="1.0703%" height="15" fill="rgb(220,13,46)" fg:x="184" fg:w="7"/><text x="28.3846%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (4 samples, 0.61%)</title><rect x="28.5933%" y="485" width="0.6116%" height="15" fill="rgb(239,221,27)" fg:x="187" fg:w="4"/><text x="28.8433%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.61%)</title><rect x="28.5933%" y="469" width="0.6116%" height="15" fill="rgb(222,198,25)" fg:x="187" fg:w="4"/><text x="28.8433%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.61%)</title><rect x="28.5933%" y="453" width="0.6116%" height="15" fill="rgb(211,99,13)" fg:x="187" fg:w="4"/><text x="28.8433%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.61%)</title><rect x="28.5933%" y="437" width="0.6116%" height="15" fill="rgb(232,111,31)" fg:x="187" fg:w="4"/><text x="28.8433%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.61%)</title><rect x="28.5933%" y="421" width="0.6116%" height="15" fill="rgb(245,82,37)" fg:x="187" fg:w="4"/><text x="28.8433%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.61%)</title><rect x="28.5933%" y="405" width="0.6116%" height="15" fill="rgb(227,149,46)" fg:x="187" fg:w="4"/><text x="28.8433%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.31%)</title><rect x="28.8991%" y="389" width="0.3058%" height="15" fill="rgb(218,36,50)" fg:x="189" fg:w="2"/><text x="29.1491%" y="399.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::default::Default&gt;::default (1 samples, 0.15%)</title><rect x="29.2049%" y="469" width="0.1529%" height="15" fill="rgb(226,80,48)" fg:x="191" fg:w="1"/><text x="29.4549%" y="479.50"></text></g><g><title>sha2::sha256::Engine256::new (1 samples, 0.15%)</title><rect x="29.2049%" y="453" width="0.1529%" height="15" fill="rgb(238,224,15)" fg:x="191" fg:w="1"/><text x="29.4549%" y="463.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (1 samples, 0.15%)</title><rect x="29.2049%" y="437" width="0.1529%" height="15" fill="rgb(241,136,10)" fg:x="191" fg:w="1"/><text x="29.4549%" y="447.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.15%)</title><rect x="29.2049%" y="421" width="0.1529%" height="15" fill="rgb(208,32,45)" fg:x="191" fg:w="1"/><text x="29.4549%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.15%)</title><rect x="29.2049%" y="405" width="0.1529%" height="15" fill="rgb(207,135,9)" fg:x="191" fg:w="1"/><text x="29.4549%" y="415.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.15%)</title><rect x="29.2049%" y="389" width="0.1529%" height="15" fill="rgb(206,86,44)" fg:x="191" fg:w="1"/><text x="29.4549%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="29.2049%" y="373" width="0.1529%" height="15" fill="rgb(245,177,15)" fg:x="191" fg:w="1"/><text x="29.4549%" y="383.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.15%)</title><rect x="29.2049%" y="357" width="0.1529%" height="15" fill="rgb(206,64,50)" fg:x="191" fg:w="1"/><text x="29.4549%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (2 samples, 0.31%)</title><rect x="29.5107%" y="421" width="0.3058%" height="15" fill="rgb(234,36,40)" fg:x="193" fg:w="2"/><text x="29.7607%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (2 samples, 0.31%)</title><rect x="29.5107%" y="405" width="0.3058%" height="15" fill="rgb(213,64,8)" fg:x="193" fg:w="2"/><text x="29.7607%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (2 samples, 0.31%)</title><rect x="29.5107%" y="389" width="0.3058%" height="15" fill="rgb(210,75,36)" fg:x="193" fg:w="2"/><text x="29.7607%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="373" width="0.1529%" height="15" fill="rgb(229,88,21)" fg:x="194" fg:w="1"/><text x="29.9136%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="357" width="0.1529%" height="15" fill="rgb(252,204,47)" fg:x="194" fg:w="1"/><text x="29.9136%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="341" width="0.1529%" height="15" fill="rgb(208,77,27)" fg:x="194" fg:w="1"/><text x="29.9136%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="325" width="0.1529%" height="15" fill="rgb(221,76,26)" fg:x="194" fg:w="1"/><text x="29.9136%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="309" width="0.1529%" height="15" fill="rgb(225,139,18)" fg:x="194" fg:w="1"/><text x="29.9136%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="293" width="0.1529%" height="15" fill="rgb(230,137,11)" fg:x="194" fg:w="1"/><text x="29.9136%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="277" width="0.1529%" height="15" fill="rgb(212,28,1)" fg:x="194" fg:w="1"/><text x="29.9136%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="29.6636%" y="261" width="0.1529%" height="15" fill="rgb(248,164,17)" fg:x="194" fg:w="1"/><text x="29.9136%" y="271.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.31%)</title><rect x="30.2752%" y="325" width="0.3058%" height="15" fill="rgb(222,171,42)" fg:x="198" fg:w="2"/><text x="30.5252%" y="335.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.31%)</title><rect x="30.2752%" y="309" width="0.3058%" height="15" fill="rgb(243,84,45)" fg:x="198" fg:w="2"/><text x="30.5252%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.31%)</title><rect x="30.2752%" y="293" width="0.3058%" height="15" fill="rgb(252,49,23)" fg:x="198" fg:w="2"/><text x="30.5252%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="325" width="0.1529%" height="15" fill="rgb(215,19,7)" fg:x="200" fg:w="1"/><text x="30.8310%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="309" width="0.1529%" height="15" fill="rgb(238,81,41)" fg:x="200" fg:w="1"/><text x="30.8310%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="293" width="0.1529%" height="15" fill="rgb(210,199,37)" fg:x="200" fg:w="1"/><text x="30.8310%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="277" width="0.1529%" height="15" fill="rgb(244,192,49)" fg:x="200" fg:w="1"/><text x="30.8310%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="261" width="0.1529%" height="15" fill="rgb(226,211,11)" fg:x="200" fg:w="1"/><text x="30.8310%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="245" width="0.1529%" height="15" fill="rgb(236,162,54)" fg:x="200" fg:w="1"/><text x="30.8310%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="229" width="0.1529%" height="15" fill="rgb(220,229,9)" fg:x="200" fg:w="1"/><text x="30.8310%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="213" width="0.1529%" height="15" fill="rgb(250,87,22)" fg:x="200" fg:w="1"/><text x="30.8310%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="197" width="0.1529%" height="15" fill="rgb(239,43,17)" fg:x="200" fg:w="1"/><text x="30.8310%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="181" width="0.1529%" height="15" fill="rgb(231,177,25)" fg:x="200" fg:w="1"/><text x="30.8310%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="30.5810%" y="165" width="0.1529%" height="15" fill="rgb(219,179,1)" fg:x="200" fg:w="1"/><text x="30.8310%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.15%)</title><rect x="30.7339%" y="309" width="0.1529%" height="15" fill="rgb(238,219,53)" fg:x="201" fg:w="1"/><text x="30.9839%" y="319.50"></text></g><g><title>sha2::sha256::soft::add (4 samples, 0.61%)</title><rect x="30.8869%" y="293" width="0.6116%" height="15" fill="rgb(232,167,36)" fg:x="202" fg:w="4"/><text x="31.1369%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4 samples, 0.61%)</title><rect x="30.8869%" y="277" width="0.6116%" height="15" fill="rgb(244,19,51)" fg:x="202" fg:w="4"/><text x="31.1369%" y="287.50"></text></g><g><title>sha2::sha256::soft::add (2 samples, 0.31%)</title><rect x="31.4985%" y="277" width="0.3058%" height="15" fill="rgb(224,6,22)" fg:x="206" fg:w="2"/><text x="31.7485%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.31%)</title><rect x="31.4985%" y="261" width="0.3058%" height="15" fill="rgb(224,145,5)" fg:x="206" fg:w="2"/><text x="31.7485%" y="271.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (6 samples, 0.92%)</title><rect x="31.4985%" y="293" width="0.9174%" height="15" fill="rgb(234,130,49)" fg:x="206" fg:w="6"/><text x="31.7485%" y="303.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (4 samples, 0.61%)</title><rect x="31.8043%" y="277" width="0.6116%" height="15" fill="rgb(254,6,2)" fg:x="208" fg:w="4"/><text x="32.0543%" y="287.50"></text></g><g><title>sha2::sha256::soft::or (4 samples, 0.61%)</title><rect x="31.8043%" y="261" width="0.6116%" height="15" fill="rgb(208,96,46)" fg:x="208" fg:w="4"/><text x="32.0543%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="33.1804%" y="277" width="0.1529%" height="15" fill="rgb(239,3,39)" fg:x="217" fg:w="1"/><text x="33.4304%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.15%)</title><rect x="33.3333%" y="277" width="0.1529%" height="15" fill="rgb(233,210,1)" fg:x="218" fg:w="1"/><text x="33.5833%" y="287.50"></text></g><g><title>sha2::sha256::soft::schedule (21 samples, 3.21%)</title><rect x="30.8869%" y="309" width="3.2110%" height="15" fill="rgb(244,137,37)" fg:x="202" fg:w="21"/><text x="31.1369%" y="319.50">sha..</text></g><g><title>sha2::sha256::soft::sha256msg2 (11 samples, 1.68%)</title><rect x="32.4159%" y="293" width="1.6820%" height="15" fill="rgb(240,136,2)" fg:x="212" fg:w="11"/><text x="32.6659%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4 samples, 0.61%)</title><rect x="33.4862%" y="277" width="0.6116%" height="15" fill="rgb(239,18,37)" fg:x="219" fg:w="4"/><text x="33.7362%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="37.7676%" y="293" width="0.3058%" height="15" fill="rgb(218,185,22)" fg:x="247" fg:w="2"/><text x="38.0176%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="277" width="0.1529%" height="15" fill="rgb(225,218,4)" fg:x="248" fg:w="1"/><text x="38.1705%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="261" width="0.1529%" height="15" fill="rgb(230,182,32)" fg:x="248" fg:w="1"/><text x="38.1705%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="245" width="0.1529%" height="15" fill="rgb(242,56,43)" fg:x="248" fg:w="1"/><text x="38.1705%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="229" width="0.1529%" height="15" fill="rgb(233,99,24)" fg:x="248" fg:w="1"/><text x="38.1705%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="213" width="0.1529%" height="15" fill="rgb(234,209,42)" fg:x="248" fg:w="1"/><text x="38.1705%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="197" width="0.1529%" height="15" fill="rgb(227,7,12)" fg:x="248" fg:w="1"/><text x="38.1705%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="181" width="0.1529%" height="15" fill="rgb(245,203,43)" fg:x="248" fg:w="1"/><text x="38.1705%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="37.9205%" y="165" width="0.1529%" height="15" fill="rgb(238,205,33)" fg:x="248" fg:w="1"/><text x="38.1705%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (9 samples, 1.38%)</title><rect x="38.0734%" y="293" width="1.3761%" height="15" fill="rgb(231,56,7)" fg:x="249" fg:w="9"/><text x="38.3234%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="277" width="0.1529%" height="15" fill="rgb(244,186,29)" fg:x="257" fg:w="1"/><text x="39.5466%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="261" width="0.1529%" height="15" fill="rgb(234,111,31)" fg:x="257" fg:w="1"/><text x="39.5466%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="245" width="0.1529%" height="15" fill="rgb(241,149,10)" fg:x="257" fg:w="1"/><text x="39.5466%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="229" width="0.1529%" height="15" fill="rgb(249,206,44)" fg:x="257" fg:w="1"/><text x="39.5466%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="213" width="0.1529%" height="15" fill="rgb(251,153,30)" fg:x="257" fg:w="1"/><text x="39.5466%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="197" width="0.1529%" height="15" fill="rgb(239,152,38)" fg:x="257" fg:w="1"/><text x="39.5466%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="181" width="0.1529%" height="15" fill="rgb(249,139,47)" fg:x="257" fg:w="1"/><text x="39.5466%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.2966%" y="165" width="0.1529%" height="15" fill="rgb(244,64,35)" fg:x="257" fg:w="1"/><text x="39.5466%" y="175.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (76 samples, 11.62%)</title><rect x="29.5107%" y="453" width="11.6208%" height="15" fill="rgb(216,46,15)" fg:x="193" fg:w="76"/><text x="29.7607%" y="463.50">&lt;D as digest::fix..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (76 samples, 11.62%)</title><rect x="29.5107%" y="437" width="11.6208%" height="15" fill="rgb(250,74,19)" fg:x="193" fg:w="76"/><text x="29.7607%" y="447.50">&lt;sha2::sha256::Sh..</text></g><g><title>sha2::sha256::Engine256::finish (74 samples, 11.31%)</title><rect x="29.8165%" y="421" width="11.3150%" height="15" fill="rgb(249,42,33)" fg:x="195" fg:w="74"/><text x="30.0665%" y="431.50">sha2::sha256::Eng..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (74 samples, 11.31%)</title><rect x="29.8165%" y="405" width="11.3150%" height="15" fill="rgb(242,149,17)" fg:x="195" fg:w="74"/><text x="30.0665%" y="415.50">block_buffer::Blo..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (74 samples, 11.31%)</title><rect x="29.8165%" y="389" width="11.3150%" height="15" fill="rgb(244,29,21)" fg:x="195" fg:w="74"/><text x="30.0665%" y="399.50">sha2::sha256::Eng..</text></g><g><title>sha2::sha256::compress256 (74 samples, 11.31%)</title><rect x="29.8165%" y="373" width="11.3150%" height="15" fill="rgb(220,130,37)" fg:x="195" fg:w="74"/><text x="30.0665%" y="383.50">sha2::sha256::com..</text></g><g><title>sha2::sha256::x86::compress (74 samples, 11.31%)</title><rect x="29.8165%" y="357" width="11.3150%" height="15" fill="rgb(211,67,2)" fg:x="195" fg:w="74"/><text x="30.0665%" y="367.50">sha2::sha256::x86..</text></g><g><title>sha2::sha256::soft::compress (74 samples, 11.31%)</title><rect x="29.8165%" y="341" width="11.3150%" height="15" fill="rgb(235,68,52)" fg:x="195" fg:w="74"/><text x="30.0665%" y="351.50">sha2::sha256::sof..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (68 samples, 10.40%)</title><rect x="30.7339%" y="325" width="10.3976%" height="15" fill="rgb(246,142,3)" fg:x="201" fg:w="68"/><text x="30.9839%" y="335.50">sha2::sha256::s..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (46 samples, 7.03%)</title><rect x="34.0979%" y="309" width="7.0336%" height="15" fill="rgb(241,25,7)" fg:x="223" fg:w="46"/><text x="34.3479%" y="319.50">sha2::sha..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (11 samples, 1.68%)</title><rect x="39.4495%" y="293" width="1.6820%" height="15" fill="rgb(242,119,39)" fg:x="258" fg:w="11"/><text x="39.6995%" y="303.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (79 samples, 12.08%)</title><rect x="29.2049%" y="485" width="12.0795%" height="15" fill="rgb(241,98,45)" fg:x="191" fg:w="79"/><text x="29.4549%" y="495.50">&lt;D as digest::dige..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (78 samples, 11.93%)</title><rect x="29.3578%" y="469" width="11.9266%" height="15" fill="rgb(254,28,30)" fg:x="192" fg:w="78"/><text x="29.6078%" y="479.50">digest::fixed::Fix..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.15%)</title><rect x="41.1315%" y="453" width="0.1529%" height="15" fill="rgb(241,142,54)" fg:x="269" fg:w="1"/><text x="41.3815%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.15%)</title><rect x="41.1315%" y="437" width="0.1529%" height="15" fill="rgb(222,85,15)" fg:x="269" fg:w="1"/><text x="41.3815%" y="447.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.15%)</title><rect x="41.1315%" y="421" width="0.1529%" height="15" fill="rgb(210,85,47)" fg:x="269" fg:w="1"/><text x="41.3815%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="41.1315%" y="405" width="0.1529%" height="15" fill="rgb(224,206,25)" fg:x="269" fg:w="1"/><text x="41.3815%" y="415.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.15%)</title><rect x="41.1315%" y="389" width="0.1529%" height="15" fill="rgb(243,201,19)" fg:x="269" fg:w="1"/><text x="41.3815%" y="399.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="41.2844%" y="325" width="0.3058%" height="15" fill="rgb(236,59,4)" fg:x="270" fg:w="2"/><text x="41.5344%" y="335.50"></text></g><g><title>lab4::package::PackageDownloader::run (201 samples, 30.73%)</title><rect x="11.0092%" y="517" width="30.7339%" height="15" fill="rgb(254,179,45)" fg:x="72" fg:w="201"/><text x="11.2592%" y="527.50">lab4::package::PackageDownloader::run</text></g><g><title>lab4::checksum::Checksum::with_sha256 (82 samples, 12.54%)</title><rect x="29.2049%" y="501" width="12.5382%" height="15" fill="rgb(226,14,10)" fg:x="191" fg:w="82"/><text x="29.4549%" y="511.50">lab4::checksum::Che..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.46%)</title><rect x="41.2844%" y="485" width="0.4587%" height="15" fill="rgb(244,27,41)" fg:x="270" fg:w="3"/><text x="41.5344%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.46%)</title><rect x="41.2844%" y="469" width="0.4587%" height="15" fill="rgb(235,35,32)" fg:x="270" fg:w="3"/><text x="41.5344%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.46%)</title><rect x="41.2844%" y="453" width="0.4587%" height="15" fill="rgb(218,68,31)" fg:x="270" fg:w="3"/><text x="41.5344%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.46%)</title><rect x="41.2844%" y="437" width="0.4587%" height="15" fill="rgb(207,120,37)" fg:x="270" fg:w="3"/><text x="41.5344%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.46%)</title><rect x="41.2844%" y="421" width="0.4587%" height="15" fill="rgb(227,98,0)" fg:x="270" fg:w="3"/><text x="41.5344%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.46%)</title><rect x="41.2844%" y="405" width="0.4587%" height="15" fill="rgb(207,7,3)" fg:x="270" fg:w="3"/><text x="41.5344%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.46%)</title><rect x="41.2844%" y="389" width="0.4587%" height="15" fill="rgb(206,98,19)" fg:x="270" fg:w="3"/><text x="41.5344%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.46%)</title><rect x="41.2844%" y="373" width="0.4587%" height="15" fill="rgb(217,5,26)" fg:x="270" fg:w="3"/><text x="41.5344%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.46%)</title><rect x="41.2844%" y="357" width="0.4587%" height="15" fill="rgb(235,190,38)" fg:x="270" fg:w="3"/><text x="41.5344%" y="367.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.46%)</title><rect x="41.2844%" y="341" width="0.4587%" height="15" fill="rgb(247,86,24)" fg:x="270" fg:w="3"/><text x="41.5344%" y="351.50"></text></g><g><title>__rust_alloc (1 samples, 0.15%)</title><rect x="41.5902%" y="325" width="0.1529%" height="15" fill="rgb(205,101,16)" fg:x="272" fg:w="1"/><text x="41.8402%" y="335.50"></text></g><g><title>__GI___libc_free (2 samples, 0.31%)</title><rect x="41.7431%" y="341" width="0.3058%" height="15" fill="rgb(246,168,33)" fg:x="273" fg:w="2"/><text x="41.9931%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::clear (5 samples, 0.76%)</title><rect x="41.7431%" y="501" width="0.7645%" height="15" fill="rgb(231,114,1)" fg:x="273" fg:w="5"/><text x="41.9931%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::truncate (5 samples, 0.76%)</title><rect x="41.7431%" y="485" width="0.7645%" height="15" fill="rgb(207,184,53)" fg:x="273" fg:w="5"/><text x="41.9931%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lab4::package::Package]&gt; (5 samples, 0.76%)</title><rect x="41.7431%" y="469" width="0.7645%" height="15" fill="rgb(224,95,51)" fg:x="273" fg:w="5"/><text x="41.9931%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::package::Package&gt; (5 samples, 0.76%)</title><rect x="41.7431%" y="453" width="0.7645%" height="15" fill="rgb(212,188,45)" fg:x="273" fg:w="5"/><text x="41.9931%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.76%)</title><rect x="41.7431%" y="437" width="0.7645%" height="15" fill="rgb(223,154,38)" fg:x="273" fg:w="5"/><text x="41.9931%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.76%)</title><rect x="41.7431%" y="421" width="0.7645%" height="15" fill="rgb(251,22,52)" fg:x="273" fg:w="5"/><text x="41.9931%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.76%)</title><rect x="41.7431%" y="405" width="0.7645%" height="15" fill="rgb(229,209,22)" fg:x="273" fg:w="5"/><text x="41.9931%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.76%)</title><rect x="41.7431%" y="389" width="0.7645%" height="15" fill="rgb(234,138,34)" fg:x="273" fg:w="5"/><text x="41.9931%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.76%)</title><rect x="41.7431%" y="373" width="0.7645%" height="15" fill="rgb(212,95,11)" fg:x="273" fg:w="5"/><text x="41.9931%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.76%)</title><rect x="41.7431%" y="357" width="0.7645%" height="15" fill="rgb(240,179,47)" fg:x="273" fg:w="5"/><text x="41.9931%" y="367.50"></text></g><g><title>_int_free (3 samples, 0.46%)</title><rect x="42.0489%" y="341" width="0.4587%" height="15" fill="rgb(240,163,11)" fg:x="275" fg:w="3"/><text x="42.2989%" y="351.50"></text></g><g><title>__GI___sched_yield (11 samples, 1.68%)</title><rect x="42.9664%" y="357" width="1.6820%" height="15" fill="rgb(236,37,12)" fg:x="281" fg:w="11"/><text x="43.2164%" y="367.50"></text></g><g><title>[unknown] (11 samples, 1.68%)</title><rect x="42.9664%" y="341" width="1.6820%" height="15" fill="rgb(232,164,16)" fg:x="281" fg:w="11"/><text x="43.2164%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="43.8838%" y="325" width="0.7645%" height="15" fill="rgb(244,205,15)" fg:x="287" fg:w="5"/><text x="44.1338%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="43.8838%" y="309" width="0.7645%" height="15" fill="rgb(223,117,47)" fg:x="287" fg:w="5"/><text x="44.1338%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="44.0367%" y="293" width="0.6116%" height="15" fill="rgb(244,107,35)" fg:x="288" fg:w="4"/><text x="44.2867%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="44.1896%" y="277" width="0.4587%" height="15" fill="rgb(205,140,8)" fg:x="289" fg:w="3"/><text x="44.4396%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="44.3425%" y="261" width="0.3058%" height="15" fill="rgb(228,84,46)" fg:x="290" fg:w="2"/><text x="44.5925%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="44.3425%" y="245" width="0.3058%" height="15" fill="rgb(254,188,9)" fg:x="290" fg:w="2"/><text x="44.5925%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="44.3425%" y="229" width="0.3058%" height="15" fill="rgb(206,112,54)" fg:x="290" fg:w="2"/><text x="44.5925%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="44.4954%" y="213" width="0.1529%" height="15" fill="rgb(216,84,49)" fg:x="291" fg:w="1"/><text x="44.7454%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="44.4954%" y="197" width="0.1529%" height="15" fill="rgb(214,194,35)" fg:x="291" fg:w="1"/><text x="44.7454%" y="207.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (31 samples, 4.74%)</title><rect x="42.9664%" y="373" width="4.7401%" height="15" fill="rgb(249,28,3)" fg:x="281" fg:w="31"/><text x="43.2164%" y="383.50">crossb..</text></g><g><title>core::sync::atomic::spin_loop_hint (20 samples, 3.06%)</title><rect x="44.6483%" y="357" width="3.0581%" height="15" fill="rgb(222,56,52)" fg:x="292" fg:w="20"/><text x="44.8983%" y="367.50">cor..</text></g><g><title>core::hint::spin_loop (20 samples, 3.06%)</title><rect x="44.6483%" y="341" width="3.0581%" height="15" fill="rgb(245,217,50)" fg:x="292" fg:w="20"/><text x="44.8983%" y="351.50">cor..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (20 samples, 3.06%)</title><rect x="44.6483%" y="325" width="3.0581%" height="15" fill="rgb(213,201,24)" fg:x="292" fg:w="20"/><text x="44.8983%" y="335.50">cor..</text></g><g><title>crossbeam_channel::context::Context::wait_until (47 samples, 7.19%)</title><rect x="42.9664%" y="389" width="7.1865%" height="15" fill="rgb(248,116,28)" fg:x="281" fg:w="47"/><text x="43.2164%" y="399.50">crossbeam_..</text></g><g><title>std::thread::park (16 samples, 2.45%)</title><rect x="47.7064%" y="373" width="2.4465%" height="15" fill="rgb(219,72,43)" fg:x="312" fg:w="16"/><text x="47.9564%" y="383.50">st..</text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (16 samples, 2.45%)</title><rect x="47.7064%" y="357" width="2.4465%" height="15" fill="rgb(209,138,14)" fg:x="312" fg:w="16"/><text x="47.9564%" y="367.50">st..</text></g><g><title>std::sys::unix::futex::futex_wait (16 samples, 2.45%)</title><rect x="47.7064%" y="341" width="2.4465%" height="15" fill="rgb(222,18,33)" fg:x="312" fg:w="16"/><text x="47.9564%" y="351.50">st..</text></g><g><title>syscall (16 samples, 2.45%)</title><rect x="47.7064%" y="325" width="2.4465%" height="15" fill="rgb(213,199,7)" fg:x="312" fg:w="16"/><text x="47.9564%" y="335.50">sy..</text></g><g><title>[unknown] (16 samples, 2.45%)</title><rect x="47.7064%" y="309" width="2.4465%" height="15" fill="rgb(250,110,10)" fg:x="312" fg:w="16"/><text x="47.9564%" y="319.50">[u..</text></g><g><title>[unknown] (16 samples, 2.45%)</title><rect x="47.7064%" y="293" width="2.4465%" height="15" fill="rgb(248,123,6)" fg:x="312" fg:w="16"/><text x="47.9564%" y="303.50">[u..</text></g><g><title>[unknown] (15 samples, 2.29%)</title><rect x="47.8593%" y="277" width="2.2936%" height="15" fill="rgb(206,91,31)" fg:x="313" fg:w="15"/><text x="48.1093%" y="287.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="48.1651%" y="261" width="1.9878%" height="15" fill="rgb(211,154,13)" fg:x="315" fg:w="13"/><text x="48.4151%" y="271.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="48.1651%" y="245" width="1.9878%" height="15" fill="rgb(225,148,7)" fg:x="315" fg:w="13"/><text x="48.4151%" y="255.50">[..</text></g><g><title>[unknown] (13 samples, 1.99%)</title><rect x="48.1651%" y="229" width="1.9878%" height="15" fill="rgb(220,160,43)" fg:x="315" fg:w="13"/><text x="48.4151%" y="239.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="213" width="1.8349%" height="15" fill="rgb(213,52,39)" fg:x="316" fg:w="12"/><text x="48.5680%" y="223.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="197" width="1.8349%" height="15" fill="rgb(243,137,7)" fg:x="316" fg:w="12"/><text x="48.5680%" y="207.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="181" width="1.8349%" height="15" fill="rgb(230,79,13)" fg:x="316" fg:w="12"/><text x="48.5680%" y="191.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="165" width="1.8349%" height="15" fill="rgb(247,105,23)" fg:x="316" fg:w="12"/><text x="48.5680%" y="175.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="149" width="1.8349%" height="15" fill="rgb(223,179,41)" fg:x="316" fg:w="12"/><text x="48.5680%" y="159.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="133" width="1.8349%" height="15" fill="rgb(218,9,34)" fg:x="316" fg:w="12"/><text x="48.5680%" y="143.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="117" width="1.8349%" height="15" fill="rgb(222,106,8)" fg:x="316" fg:w="12"/><text x="48.5680%" y="127.50">[..</text></g><g><title>[unknown] (12 samples, 1.83%)</title><rect x="48.3180%" y="101" width="1.8349%" height="15" fill="rgb(211,220,0)" fg:x="316" fg:w="12"/><text x="48.5680%" y="111.50">[..</text></g><g><title>core::sync::atomic::AtomicBool::swap (3 samples, 0.46%)</title><rect x="50.1529%" y="357" width="0.4587%" height="15" fill="rgb(229,52,16)" fg:x="328" fg:w="3"/><text x="50.4029%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.46%)</title><rect x="50.1529%" y="341" width="0.4587%" height="15" fill="rgb(212,155,18)" fg:x="328" fg:w="3"/><text x="50.4029%" y="351.50"></text></g><g><title>__GI___sched_yield (63 samples, 9.63%)</title><rect x="50.6116%" y="341" width="9.6330%" height="15" fill="rgb(242,21,14)" fg:x="331" fg:w="63"/><text x="50.8616%" y="351.50">__GI___sched_y..</text></g><g><title>[unknown] (63 samples, 9.63%)</title><rect x="50.6116%" y="325" width="9.6330%" height="15" fill="rgb(222,19,48)" fg:x="331" fg:w="63"/><text x="50.8616%" y="335.50">[unknown]</text></g><g><title>[unknown] (36 samples, 5.50%)</title><rect x="54.7401%" y="309" width="5.5046%" height="15" fill="rgb(232,45,27)" fg:x="358" fg:w="36"/><text x="54.9901%" y="319.50">[unknow..</text></g><g><title>[unknown] (35 samples, 5.35%)</title><rect x="54.8930%" y="293" width="5.3517%" height="15" fill="rgb(249,103,42)" fg:x="359" fg:w="35"/><text x="55.1430%" y="303.50">[unknow..</text></g><g><title>[unknown] (27 samples, 4.13%)</title><rect x="56.1162%" y="277" width="4.1284%" height="15" fill="rgb(246,81,33)" fg:x="367" fg:w="27"/><text x="56.3662%" y="287.50">[unk..</text></g><g><title>[unknown] (24 samples, 3.67%)</title><rect x="56.5749%" y="261" width="3.6697%" height="15" fill="rgb(252,33,42)" fg:x="370" fg:w="24"/><text x="56.8249%" y="271.50">[unk..</text></g><g><title>[unknown] (22 samples, 3.36%)</title><rect x="56.8807%" y="245" width="3.3639%" height="15" fill="rgb(209,212,41)" fg:x="372" fg:w="22"/><text x="57.1307%" y="255.50">[un..</text></g><g><title>[unknown] (19 samples, 2.91%)</title><rect x="57.3394%" y="229" width="2.9052%" height="15" fill="rgb(207,154,6)" fg:x="375" fg:w="19"/><text x="57.5894%" y="239.50">[u..</text></g><g><title>[unknown] (17 samples, 2.60%)</title><rect x="57.6453%" y="213" width="2.5994%" height="15" fill="rgb(223,64,47)" fg:x="377" fg:w="17"/><text x="57.8953%" y="223.50">[u..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="58.1040%" y="197" width="2.1407%" height="15" fill="rgb(211,161,38)" fg:x="380" fg:w="14"/><text x="58.3540%" y="207.50">[..</text></g><g><title>[unknown] (8 samples, 1.22%)</title><rect x="59.0214%" y="181" width="1.2232%" height="15" fill="rgb(219,138,40)" fg:x="386" fg:w="8"/><text x="59.2714%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="59.3272%" y="165" width="0.9174%" height="15" fill="rgb(241,228,46)" fg:x="388" fg:w="6"/><text x="59.5772%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="59.3272%" y="149" width="0.9174%" height="15" fill="rgb(223,209,38)" fg:x="388" fg:w="6"/><text x="59.5772%" y="159.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (71 samples, 10.86%)</title><rect x="50.1529%" y="389" width="10.8563%" height="15" fill="rgb(236,164,45)" fg:x="328" fg:w="71"/><text x="50.4029%" y="399.50">crossbeam_channe..</text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (71 samples, 10.86%)</title><rect x="50.1529%" y="373" width="10.8563%" height="15" fill="rgb(231,15,5)" fg:x="328" fg:w="71"/><text x="50.4029%" y="383.50">crossbeam_channe..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (68 samples, 10.40%)</title><rect x="50.6116%" y="357" width="10.3976%" height="15" fill="rgb(252,35,15)" fg:x="331" fg:w="68"/><text x="50.8616%" y="367.50">crossbeam_utils..</text></g><g><title>core::sync::atomic::spin_loop_hint (5 samples, 0.76%)</title><rect x="60.2446%" y="341" width="0.7645%" height="15" fill="rgb(248,181,18)" fg:x="394" fg:w="5"/><text x="60.4946%" y="351.50"></text></g><g><title>core::hint::spin_loop (5 samples, 0.76%)</title><rect x="60.2446%" y="325" width="0.7645%" height="15" fill="rgb(233,39,42)" fg:x="394" fg:w="5"/><text x="60.4946%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (5 samples, 0.76%)</title><rect x="60.2446%" y="309" width="0.7645%" height="15" fill="rgb(238,110,33)" fg:x="394" fg:w="5"/><text x="60.4946%" y="319.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.46%)</title><rect x="61.0092%" y="341" width="0.4587%" height="15" fill="rgb(233,195,10)" fg:x="399" fg:w="3"/><text x="61.2592%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="61.0092%" y="325" width="0.4587%" height="15" fill="rgb(254,105,3)" fg:x="399" fg:w="3"/><text x="61.2592%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="61.3150%" y="309" width="0.1529%" height="15" fill="rgb(221,225,9)" fg:x="401" fg:w="1"/><text x="61.5650%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="61.3150%" y="293" width="0.1529%" height="15" fill="rgb(224,227,45)" fg:x="401" fg:w="1"/><text x="61.5650%" y="303.50"></text></g><g><title>crossbeam_channel::context::Context::with (122 samples, 18.65%)</title><rect x="42.9664%" y="469" width="18.6544%" height="15" fill="rgb(229,198,43)" fg:x="281" fg:w="122"/><text x="43.2164%" y="479.50">crossbeam_channel::context::C..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (122 samples, 18.65%)</title><rect x="42.9664%" y="453" width="18.6544%" height="15" fill="rgb(206,209,35)" fg:x="281" fg:w="122"/><text x="43.2164%" y="463.50">std::thread::local::LocalKey&lt;..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (122 samples, 18.65%)</title><rect x="42.9664%" y="437" width="18.6544%" height="15" fill="rgb(245,195,53)" fg:x="281" fg:w="122"/><text x="43.2164%" y="447.50">crossbeam_channel::context::C..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (122 samples, 18.65%)</title><rect x="42.9664%" y="421" width="18.6544%" height="15" fill="rgb(240,92,26)" fg:x="281" fg:w="122"/><text x="43.2164%" y="431.50">crossbeam_channel::context::C..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (122 samples, 18.65%)</title><rect x="42.9664%" y="405" width="18.6544%" height="15" fill="rgb(207,40,23)" fg:x="281" fg:w="122"/><text x="43.2164%" y="415.50">crossbeam_channel::flavors::l..</text></g><g><title>crossbeam_channel::waker::SyncWaker::unregister (4 samples, 0.61%)</title><rect x="61.0092%" y="389" width="0.6116%" height="15" fill="rgb(223,111,35)" fg:x="399" fg:w="4"/><text x="61.2592%" y="399.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (4 samples, 0.61%)</title><rect x="61.0092%" y="373" width="0.6116%" height="15" fill="rgb(229,147,28)" fg:x="399" fg:w="4"/><text x="61.2592%" y="383.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (4 samples, 0.61%)</title><rect x="61.0092%" y="357" width="0.6116%" height="15" fill="rgb(211,29,28)" fg:x="399" fg:w="4"/><text x="61.2592%" y="367.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.15%)</title><rect x="61.4679%" y="341" width="0.1529%" height="15" fill="rgb(228,72,33)" fg:x="402" fg:w="1"/><text x="61.7179%" y="351.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.15%)</title><rect x="61.4679%" y="325" width="0.1529%" height="15" fill="rgb(205,214,31)" fg:x="402" fg:w="1"/><text x="61.7179%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.15%)</title><rect x="61.4679%" y="309" width="0.1529%" height="15" fill="rgb(224,111,15)" fg:x="402" fg:w="1"/><text x="61.7179%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="61.7737%" y="453" width="0.1529%" height="15" fill="rgb(253,21,26)" fg:x="404" fg:w="1"/><text x="62.0237%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.15%)</title><rect x="61.9266%" y="453" width="0.1529%" height="15" fill="rgb(245,139,43)" fg:x="405" fg:w="1"/><text x="62.1766%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.15%)</title><rect x="61.9266%" y="437" width="0.1529%" height="15" fill="rgb(252,170,7)" fg:x="405" fg:w="1"/><text x="62.1766%" y="447.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (6 samples, 0.92%)</title><rect x="61.6208%" y="469" width="0.9174%" height="15" fill="rgb(231,118,14)" fg:x="403" fg:w="6"/><text x="61.8708%" y="479.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (3 samples, 0.46%)</title><rect x="62.0795%" y="453" width="0.4587%" height="15" fill="rgb(238,83,0)" fg:x="406" fg:w="3"/><text x="62.3295%" y="463.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (3 samples, 0.46%)</title><rect x="62.0795%" y="437" width="0.4587%" height="15" fill="rgb(221,39,39)" fg:x="406" fg:w="3"/><text x="62.3295%" y="447.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.46%)</title><rect x="62.0795%" y="421" width="0.4587%" height="15" fill="rgb(222,119,46)" fg:x="406" fg:w="3"/><text x="62.3295%" y="431.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.46%)</title><rect x="62.0795%" y="405" width="0.4587%" height="15" fill="rgb(222,165,49)" fg:x="406" fg:w="3"/><text x="62.3295%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.46%)</title><rect x="62.0795%" y="389" width="0.4587%" height="15" fill="rgb(219,113,52)" fg:x="406" fg:w="3"/><text x="62.3295%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.46%)</title><rect x="62.5382%" y="453" width="0.4587%" height="15" fill="rgb(214,7,15)" fg:x="409" fg:w="3"/><text x="62.7882%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.46%)</title><rect x="62.5382%" y="437" width="0.4587%" height="15" fill="rgb(235,32,4)" fg:x="409" fg:w="3"/><text x="62.7882%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 1.53%)</title><rect x="62.9969%" y="453" width="1.5291%" height="15" fill="rgb(238,90,54)" fg:x="412" fg:w="10"/><text x="63.2469%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 1.53%)</title><rect x="62.9969%" y="437" width="1.5291%" height="15" fill="rgb(213,208,19)" fg:x="412" fg:w="10"/><text x="63.2469%" y="447.50"></text></g><g><title>core::sync::atomic::fence (3 samples, 0.46%)</title><rect x="64.5260%" y="453" width="0.4587%" height="15" fill="rgb(233,156,4)" fg:x="422" fg:w="3"/><text x="64.7760%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="64.9847%" y="437" width="0.1529%" height="15" fill="rgb(207,194,5)" fg:x="425" fg:w="1"/><text x="65.2347%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.15%)</title><rect x="64.9847%" y="421" width="0.1529%" height="15" fill="rgb(206,111,30)" fg:x="425" fg:w="1"/><text x="65.2347%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.15%)</title><rect x="64.9847%" y="405" width="0.1529%" height="15" fill="rgb(243,70,54)" fg:x="425" fg:w="1"/><text x="65.2347%" y="415.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (20 samples, 3.06%)</title><rect x="62.5382%" y="469" width="3.0581%" height="15" fill="rgb(242,28,8)" fg:x="409" fg:w="20"/><text x="62.7882%" y="479.50">cro..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (4 samples, 0.61%)</title><rect x="64.9847%" y="453" width="0.6116%" height="15" fill="rgb(219,106,18)" fg:x="425" fg:w="4"/><text x="65.2347%" y="463.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.46%)</title><rect x="65.1376%" y="437" width="0.4587%" height="15" fill="rgb(244,222,10)" fg:x="426" fg:w="3"/><text x="65.3876%" y="447.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.46%)</title><rect x="65.1376%" y="421" width="0.4587%" height="15" fill="rgb(236,179,52)" fg:x="426" fg:w="3"/><text x="65.3876%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.46%)</title><rect x="65.1376%" y="405" width="0.4587%" height="15" fill="rgb(213,23,39)" fg:x="426" fg:w="3"/><text x="65.3876%" y="415.50"></text></g><g><title>__GI___sched_yield (29 samples, 4.43%)</title><rect x="65.7492%" y="453" width="4.4343%" height="15" fill="rgb(238,48,10)" fg:x="430" fg:w="29"/><text x="65.9992%" y="463.50">__GI_..</text></g><g><title>[unknown] (29 samples, 4.43%)</title><rect x="65.7492%" y="437" width="4.4343%" height="15" fill="rgb(251,196,23)" fg:x="430" fg:w="29"/><text x="65.9992%" y="447.50">[unkn..</text></g><g><title>[unknown] (17 samples, 2.60%)</title><rect x="67.5841%" y="421" width="2.5994%" height="15" fill="rgb(250,152,24)" fg:x="442" fg:w="17"/><text x="67.8341%" y="431.50">[u..</text></g><g><title>[unknown] (17 samples, 2.60%)</title><rect x="67.5841%" y="405" width="2.5994%" height="15" fill="rgb(209,150,17)" fg:x="442" fg:w="17"/><text x="67.8341%" y="415.50">[u..</text></g><g><title>[unknown] (15 samples, 2.29%)</title><rect x="67.8899%" y="389" width="2.2936%" height="15" fill="rgb(234,202,34)" fg:x="444" fg:w="15"/><text x="68.1399%" y="399.50">[..</text></g><g><title>[unknown] (14 samples, 2.14%)</title><rect x="68.0428%" y="373" width="2.1407%" height="15" fill="rgb(253,148,53)" fg:x="445" fg:w="14"/><text x="68.2928%" y="383.50">[..</text></g><g><title>[unknown] (11 samples, 1.68%)</title><rect x="68.5015%" y="357" width="1.6820%" height="15" fill="rgb(218,129,16)" fg:x="448" fg:w="11"/><text x="68.7515%" y="367.50"></text></g><g><title>[unknown] (11 samples, 1.68%)</title><rect x="68.5015%" y="341" width="1.6820%" height="15" fill="rgb(216,85,19)" fg:x="448" fg:w="11"/><text x="68.7515%" y="351.50"></text></g><g><title>[unknown] (10 samples, 1.53%)</title><rect x="68.6544%" y="325" width="1.5291%" height="15" fill="rgb(235,228,7)" fg:x="449" fg:w="10"/><text x="68.9044%" y="335.50"></text></g><g><title>[unknown] (10 samples, 1.53%)</title><rect x="68.6544%" y="309" width="1.5291%" height="15" fill="rgb(245,175,0)" fg:x="449" fg:w="10"/><text x="68.9044%" y="319.50"></text></g><g><title>[unknown] (9 samples, 1.38%)</title><rect x="68.8073%" y="293" width="1.3761%" height="15" fill="rgb(208,168,36)" fg:x="450" fg:w="9"/><text x="69.0573%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="69.2661%" y="277" width="0.9174%" height="15" fill="rgb(246,171,24)" fg:x="453" fg:w="6"/><text x="69.5161%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="69.2661%" y="261" width="0.9174%" height="15" fill="rgb(215,142,24)" fg:x="453" fg:w="6"/><text x="69.5161%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 1.22%)</title><rect x="70.1835%" y="453" width="1.2232%" height="15" fill="rgb(250,187,7)" fg:x="459" fg:w="8"/><text x="70.4335%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 1.22%)</title><rect x="70.1835%" y="437" width="1.2232%" height="15" fill="rgb(228,66,33)" fg:x="459" fg:w="8"/><text x="70.4335%" y="447.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (83 samples, 12.69%)</title><rect x="71.4067%" y="453" width="12.6911%" height="15" fill="rgb(234,215,21)" fg:x="467" fg:w="83"/><text x="71.6567%" y="463.50">core::sync::atomic:..</text></g><g><title>core::hint::spin_loop (83 samples, 12.69%)</title><rect x="71.4067%" y="437" width="12.6911%" height="15" fill="rgb(222,191,20)" fg:x="467" fg:w="83"/><text x="71.6567%" y="447.50">core::hint::spin_lo..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (83 samples, 12.69%)</title><rect x="71.4067%" y="421" width="12.6911%" height="15" fill="rgb(245,79,54)" fg:x="467" fg:w="83"/><text x="71.6567%" y="431.50">core::core_arch::x8..</text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.9450%" y="405" width="0.1529%" height="15" fill="rgb(240,10,37)" fg:x="549" fg:w="1"/><text x="84.1950%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.9450%" y="389" width="0.1529%" height="15" fill="rgb(214,192,32)" fg:x="549" fg:w="1"/><text x="84.1950%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.9450%" y="373" width="0.1529%" height="15" fill="rgb(209,36,54)" fg:x="549" fg:w="1"/><text x="84.1950%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.9450%" y="357" width="0.1529%" height="15" fill="rgb(220,10,11)" fg:x="549" fg:w="1"/><text x="84.1950%" y="367.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (273 samples, 41.74%)</title><rect x="42.5076%" y="501" width="41.7431%" height="15" fill="rgb(221,106,17)" fg:x="278" fg:w="273"/><text x="42.7576%" y="511.50">crossbeam_channel::channel::Receiver&lt;T&gt;::recv</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (273 samples, 41.74%)</title><rect x="42.5076%" y="485" width="41.7431%" height="15" fill="rgb(251,142,44)" fg:x="278" fg:w="273"/><text x="42.7576%" y="495.50">crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (122 samples, 18.65%)</title><rect x="65.5963%" y="469" width="18.6544%" height="15" fill="rgb(238,13,15)" fg:x="429" fg:w="122"/><text x="65.8463%" y="479.50">crossbeam_utils::backoff::Bac..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 0.15%)</title><rect x="84.0979%" y="453" width="0.1529%" height="15" fill="rgb(208,107,27)" fg:x="550" fg:w="1"/><text x="84.3479%" y="463.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (1 samples, 0.15%)</title><rect x="84.0979%" y="437" width="0.1529%" height="15" fill="rgb(205,136,37)" fg:x="550" fg:w="1"/><text x="84.3479%" y="447.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (1 samples, 0.15%)</title><rect x="84.0979%" y="421" width="0.1529%" height="15" fill="rgb(250,205,27)" fg:x="550" fg:w="1"/><text x="84.3479%" y="431.50"></text></g><g><title>std::thread::park (1 samples, 0.15%)</title><rect x="84.0979%" y="405" width="0.1529%" height="15" fill="rgb(210,80,43)" fg:x="550" fg:w="1"/><text x="84.3479%" y="415.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (1 samples, 0.15%)</title><rect x="84.0979%" y="389" width="0.1529%" height="15" fill="rgb(247,160,36)" fg:x="550" fg:w="1"/><text x="84.3479%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.15%)</title><rect x="84.0979%" y="373" width="0.1529%" height="15" fill="rgb(234,13,49)" fg:x="550" fg:w="1"/><text x="84.3479%" y="383.50"></text></g><g><title>syscall (1 samples, 0.15%)</title><rect x="84.0979%" y="357" width="0.1529%" height="15" fill="rgb(234,122,0)" fg:x="550" fg:w="1"/><text x="84.3479%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.0979%" y="341" width="0.1529%" height="15" fill="rgb(207,146,38)" fg:x="550" fg:w="1"/><text x="84.3479%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="84.2508%" y="485" width="0.1529%" height="15" fill="rgb(207,177,25)" fg:x="551" fg:w="1"/><text x="84.5008%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.31%)</title><rect x="84.4037%" y="485" width="0.3058%" height="15" fill="rgb(211,178,42)" fg:x="552" fg:w="2"/><text x="84.6537%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="85.0153%" y="405" width="0.1529%" height="15" fill="rgb(230,69,54)" fg:x="556" fg:w="1"/><text x="85.2653%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="85.0153%" y="389" width="0.1529%" height="15" fill="rgb(214,135,41)" fg:x="556" fg:w="1"/><text x="85.2653%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.15%)</title><rect x="85.0153%" y="373" width="0.1529%" height="15" fill="rgb(237,67,25)" fg:x="556" fg:w="1"/><text x="85.2653%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="85.0153%" y="357" width="0.1529%" height="15" fill="rgb(222,189,50)" fg:x="556" fg:w="1"/><text x="85.2653%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.15%)</title><rect x="85.0153%" y="341" width="0.1529%" height="15" fill="rgb(245,148,34)" fg:x="556" fg:w="1"/><text x="85.2653%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="85.0153%" y="325" width="0.1529%" height="15" fill="rgb(222,29,6)" fg:x="556" fg:w="1"/><text x="85.2653%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.15%)</title><rect x="85.0153%" y="309" width="0.1529%" height="15" fill="rgb(221,189,43)" fg:x="556" fg:w="1"/><text x="85.2653%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.31%)</title><rect x="85.0153%" y="469" width="0.3058%" height="15" fill="rgb(207,36,27)" fg:x="556" fg:w="2"/><text x="85.2653%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.31%)</title><rect x="85.0153%" y="453" width="0.3058%" height="15" fill="rgb(217,90,24)" fg:x="556" fg:w="2"/><text x="85.2653%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.31%)</title><rect x="85.0153%" y="437" width="0.3058%" height="15" fill="rgb(224,66,35)" fg:x="556" fg:w="2"/><text x="85.2653%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.31%)</title><rect x="85.0153%" y="421" width="0.3058%" height="15" fill="rgb(221,13,50)" fg:x="556" fg:w="2"/><text x="85.2653%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="85.1682%" y="405" width="0.1529%" height="15" fill="rgb(236,68,49)" fg:x="557" fg:w="1"/><text x="85.4182%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="85.1682%" y="389" width="0.1529%" height="15" fill="rgb(229,146,28)" fg:x="557" fg:w="1"/><text x="85.4182%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="85.1682%" y="373" width="0.1529%" height="15" fill="rgb(225,31,38)" fg:x="557" fg:w="1"/><text x="85.4182%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="85.1682%" y="357" width="0.1529%" height="15" fill="rgb(250,208,3)" fg:x="557" fg:w="1"/><text x="85.4182%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="85.1682%" y="341" width="0.1529%" height="15" fill="rgb(246,54,23)" fg:x="557" fg:w="1"/><text x="85.4182%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="85.1682%" y="325" width="0.1529%" height="15" fill="rgb(243,76,11)" fg:x="557" fg:w="1"/><text x="85.4182%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="85.1682%" y="309" width="0.1529%" height="15" fill="rgb(245,21,50)" fg:x="557" fg:w="1"/><text x="85.4182%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="85.1682%" y="293" width="0.1529%" height="15" fill="rgb(228,9,43)" fg:x="557" fg:w="1"/><text x="85.4182%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="85.3211%" y="373" width="0.1529%" height="15" fill="rgb(208,100,47)" fg:x="558" fg:w="1"/><text x="85.5711%" y="383.50"></text></g><g><title>lab4::checksum::Checksum::update (6 samples, 0.92%)</title><rect x="84.7095%" y="485" width="0.9174%" height="15" fill="rgb(232,26,8)" fg:x="554" fg:w="6"/><text x="84.9595%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (2 samples, 0.31%)</title><rect x="85.3211%" y="469" width="0.3058%" height="15" fill="rgb(216,166,38)" fg:x="558" fg:w="2"/><text x="85.5711%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.31%)</title><rect x="85.3211%" y="453" width="0.3058%" height="15" fill="rgb(251,202,51)" fg:x="558" fg:w="2"/><text x="85.5711%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.31%)</title><rect x="85.3211%" y="437" width="0.3058%" height="15" fill="rgb(254,216,34)" fg:x="558" fg:w="2"/><text x="85.5711%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="85.3211%" y="421" width="0.3058%" height="15" fill="rgb(251,32,27)" fg:x="558" fg:w="2"/><text x="85.5711%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.31%)</title><rect x="85.3211%" y="405" width="0.3058%" height="15" fill="rgb(208,127,28)" fg:x="558" fg:w="2"/><text x="85.5711%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.31%)</title><rect x="85.3211%" y="389" width="0.3058%" height="15" fill="rgb(224,137,22)" fg:x="558" fg:w="2"/><text x="85.5711%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="85.4740%" y="373" width="0.1529%" height="15" fill="rgb(254,70,32)" fg:x="559" fg:w="1"/><text x="85.7240%" y="383.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (4 samples, 0.61%)</title><rect x="85.6269%" y="453" width="0.6116%" height="15" fill="rgb(229,75,37)" fg:x="560" fg:w="4"/><text x="85.8769%" y="463.50"></text></g><g><title>sha2::sha256::Engine256::update (4 samples, 0.61%)</title><rect x="85.6269%" y="437" width="0.6116%" height="15" fill="rgb(252,64,23)" fg:x="560" fg:w="4"/><text x="85.8769%" y="447.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (4 samples, 0.61%)</title><rect x="85.6269%" y="421" width="0.6116%" height="15" fill="rgb(232,162,48)" fg:x="560" fg:w="4"/><text x="85.8769%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.61%)</title><rect x="85.6269%" y="405" width="0.6116%" height="15" fill="rgb(246,160,12)" fg:x="560" fg:w="4"/><text x="85.8769%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.61%)</title><rect x="85.6269%" y="389" width="0.6116%" height="15" fill="rgb(247,166,0)" fg:x="560" fg:w="4"/><text x="85.8769%" y="399.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.61%)</title><rect x="85.6269%" y="373" width="0.6116%" height="15" fill="rgb(249,219,21)" fg:x="560" fg:w="4"/><text x="85.8769%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (4 samples, 0.61%)</title><rect x="86.2385%" y="405" width="0.6116%" height="15" fill="rgb(205,209,3)" fg:x="564" fg:w="4"/><text x="86.4885%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (4 samples, 0.61%)</title><rect x="86.2385%" y="389" width="0.6116%" height="15" fill="rgb(243,44,1)" fg:x="564" fg:w="4"/><text x="86.4885%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (4 samples, 0.61%)</title><rect x="86.2385%" y="373" width="0.6116%" height="15" fill="rgb(206,159,16)" fg:x="564" fg:w="4"/><text x="86.4885%" y="383.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.15%)</title><rect x="87.0031%" y="309" width="0.1529%" height="15" fill="rgb(244,77,30)" fg:x="569" fg:w="1"/><text x="87.2531%" y="319.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.15%)</title><rect x="87.0031%" y="293" width="0.1529%" height="15" fill="rgb(218,69,12)" fg:x="569" fg:w="1"/><text x="87.2531%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.15%)</title><rect x="87.0031%" y="277" width="0.1529%" height="15" fill="rgb(212,87,7)" fg:x="569" fg:w="1"/><text x="87.2531%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="87.1560%" y="309" width="0.1529%" height="15" fill="rgb(245,114,25)" fg:x="570" fg:w="1"/><text x="87.4060%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.15%)</title><rect x="87.3089%" y="309" width="0.1529%" height="15" fill="rgb(210,61,42)" fg:x="571" fg:w="1"/><text x="87.5589%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.15%)</title><rect x="87.3089%" y="293" width="0.1529%" height="15" fill="rgb(211,52,33)" fg:x="571" fg:w="1"/><text x="87.5589%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.15%)</title><rect x="87.3089%" y="277" width="0.1529%" height="15" fill="rgb(234,58,33)" fg:x="571" fg:w="1"/><text x="87.5589%" y="287.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.15%)</title><rect x="87.4618%" y="277" width="0.1529%" height="15" fill="rgb(220,115,36)" fg:x="572" fg:w="1"/><text x="87.7118%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.15%)</title><rect x="87.4618%" y="261" width="0.1529%" height="15" fill="rgb(243,153,54)" fg:x="572" fg:w="1"/><text x="87.7118%" y="271.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.15%)</title><rect x="87.6147%" y="261" width="0.1529%" height="15" fill="rgb(251,47,18)" fg:x="573" fg:w="1"/><text x="87.8647%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.15%)</title><rect x="87.6147%" y="245" width="0.1529%" height="15" fill="rgb(242,102,42)" fg:x="573" fg:w="1"/><text x="87.8647%" y="255.50"></text></g><g><title>sha2::sha256::soft::or (2 samples, 0.31%)</title><rect x="87.7676%" y="245" width="0.3058%" height="15" fill="rgb(234,31,38)" fg:x="574" fg:w="2"/><text x="88.0176%" y="255.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (6 samples, 0.92%)</title><rect x="87.6147%" y="277" width="0.9174%" height="15" fill="rgb(221,117,51)" fg:x="573" fg:w="6"/><text x="87.8647%" y="287.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (5 samples, 0.76%)</title><rect x="87.7676%" y="261" width="0.7645%" height="15" fill="rgb(212,20,18)" fg:x="574" fg:w="5"/><text x="88.0176%" y="271.50"></text></g><g><title>sha2::sha256::soft::xor (3 samples, 0.46%)</title><rect x="88.0734%" y="245" width="0.4587%" height="15" fill="rgb(245,133,36)" fg:x="576" fg:w="3"/><text x="88.3234%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3 samples, 0.46%)</title><rect x="89.4495%" y="261" width="0.4587%" height="15" fill="rgb(212,6,19)" fg:x="585" fg:w="3"/><text x="89.6995%" y="271.50"></text></g><g><title>sha2::sha256::soft::schedule (20 samples, 3.06%)</title><rect x="87.4618%" y="293" width="3.0581%" height="15" fill="rgb(218,1,36)" fg:x="572" fg:w="20"/><text x="87.7118%" y="303.50">sha..</text></g><g><title>sha2::sha256::soft::sha256msg2 (13 samples, 1.99%)</title><rect x="88.5321%" y="277" width="1.9878%" height="15" fill="rgb(246,84,54)" fg:x="579" fg:w="13"/><text x="88.7821%" y="287.50">s..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4 samples, 0.61%)</title><rect x="89.9083%" y="261" width="0.6116%" height="15" fill="rgb(242,110,6)" fg:x="588" fg:w="4"/><text x="90.1583%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (6 samples, 0.92%)</title><rect x="94.0367%" y="277" width="0.9174%" height="15" fill="rgb(214,47,5)" fg:x="615" fg:w="6"/><text x="94.2867%" y="287.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (70 samples, 10.70%)</title><rect x="85.6269%" y="469" width="10.7034%" height="15" fill="rgb(218,159,25)" fg:x="560" fg:w="70"/><text x="85.8769%" y="479.50">&lt;D as digest::di..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (66 samples, 10.09%)</title><rect x="86.2385%" y="453" width="10.0917%" height="15" fill="rgb(215,211,28)" fg:x="564" fg:w="66"/><text x="86.4885%" y="463.50">digest::fixed::..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (66 samples, 10.09%)</title><rect x="86.2385%" y="437" width="10.0917%" height="15" fill="rgb(238,59,32)" fg:x="564" fg:w="66"/><text x="86.4885%" y="447.50">&lt;D as digest::f..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (66 samples, 10.09%)</title><rect x="86.2385%" y="421" width="10.0917%" height="15" fill="rgb(226,82,3)" fg:x="564" fg:w="66"/><text x="86.4885%" y="431.50">&lt;sha2::sha256::..</text></g><g><title>sha2::sha256::Engine256::finish (62 samples, 9.48%)</title><rect x="86.8502%" y="405" width="9.4801%" height="15" fill="rgb(240,164,32)" fg:x="568" fg:w="62"/><text x="87.1002%" y="415.50">sha2::sha256::..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (62 samples, 9.48%)</title><rect x="86.8502%" y="389" width="9.4801%" height="15" fill="rgb(232,46,7)" fg:x="568" fg:w="62"/><text x="87.1002%" y="399.50">block_buffer::..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (62 samples, 9.48%)</title><rect x="86.8502%" y="373" width="9.4801%" height="15" fill="rgb(229,129,53)" fg:x="568" fg:w="62"/><text x="87.1002%" y="383.50">sha2::sha256::..</text></g><g><title>sha2::sha256::compress256 (62 samples, 9.48%)</title><rect x="86.8502%" y="357" width="9.4801%" height="15" fill="rgb(234,188,29)" fg:x="568" fg:w="62"/><text x="87.1002%" y="367.50">sha2::sha256::..</text></g><g><title>sha2::sha256::x86::compress (62 samples, 9.48%)</title><rect x="86.8502%" y="341" width="9.4801%" height="15" fill="rgb(246,141,4)" fg:x="568" fg:w="62"/><text x="87.1002%" y="351.50">sha2::sha256::..</text></g><g><title>sha2::sha256::soft::compress (62 samples, 9.48%)</title><rect x="86.8502%" y="325" width="9.4801%" height="15" fill="rgb(229,23,39)" fg:x="568" fg:w="62"/><text x="87.1002%" y="335.50">sha2::sha256::..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (58 samples, 8.87%)</title><rect x="87.4618%" y="309" width="8.8685%" height="15" fill="rgb(206,12,3)" fg:x="572" fg:w="58"/><text x="87.7118%" y="319.50">sha2::sha256:..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (38 samples, 5.81%)</title><rect x="90.5199%" y="293" width="5.8104%" height="15" fill="rgb(252,226,20)" fg:x="592" fg:w="38"/><text x="90.7699%" y="303.50">sha2::s..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (9 samples, 1.38%)</title><rect x="94.9541%" y="277" width="1.3761%" height="15" fill="rgb(216,123,35)" fg:x="621" fg:w="9"/><text x="95.2041%" y="287.50"></text></g><g><title>std::panic::catch_unwind (561 samples, 85.78%)</title><rect x="10.7034%" y="629" width="85.7798%" height="15" fill="rgb(212,68,40)" fg:x="70" fg:w="561"/><text x="10.9534%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (561 samples, 85.78%)</title><rect x="10.7034%" y="613" width="85.7798%" height="15" fill="rgb(254,125,32)" fg:x="70" fg:w="561"/><text x="10.9534%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (561 samples, 85.78%)</title><rect x="10.7034%" y="597" width="85.7798%" height="15" fill="rgb(253,97,22)" fg:x="70" fg:w="561"/><text x="10.9534%" y="607.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (561 samples, 85.78%)</title><rect x="10.7034%" y="581" width="85.7798%" height="15" fill="rgb(241,101,14)" fg:x="70" fg:w="561"/><text x="10.9534%" y="591.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (561 samples, 85.78%)</title><rect x="10.7034%" y="565" width="85.7798%" height="15" fill="rgb(238,103,29)" fg:x="70" fg:w="561"/><text x="10.9534%" y="575.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (561 samples, 85.78%)</title><rect x="10.7034%" y="549" width="85.7798%" height="15" fill="rgb(233,195,47)" fg:x="70" fg:w="561"/><text x="10.9534%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (561 samples, 85.78%)</title><rect x="10.7034%" y="533" width="85.7798%" height="15" fill="rgb(246,218,30)" fg:x="70" fg:w="561"/><text x="10.9534%" y="543.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (358 samples, 54.74%)</title><rect x="41.7431%" y="517" width="54.7401%" height="15" fill="rgb(219,145,47)" fg:x="273" fg:w="358"/><text x="41.9931%" y="527.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (80 samples, 12.23%)</title><rect x="84.2508%" y="501" width="12.2324%" height="15" fill="rgb(243,12,26)" fg:x="551" fg:w="80"/><text x="84.5008%" y="511.50">lab4::student::Stu..</text></g><g><title>lab4::checksum::Checksum::with_sha256 (71 samples, 10.86%)</title><rect x="85.6269%" y="485" width="10.8563%" height="15" fill="rgb(214,87,16)" fg:x="560" fg:w="71"/><text x="85.8769%" y="495.50">lab4::checksum::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="96.3303%" y="469" width="0.1529%" height="15" fill="rgb(208,99,42)" fg:x="630" fg:w="1"/><text x="96.5803%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="96.3303%" y="453" width="0.1529%" height="15" fill="rgb(253,99,2)" fg:x="630" fg:w="1"/><text x="96.5803%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="96.3303%" y="437" width="0.1529%" height="15" fill="rgb(220,168,23)" fg:x="630" fg:w="1"/><text x="96.5803%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="96.3303%" y="421" width="0.1529%" height="15" fill="rgb(242,38,24)" fg:x="630" fg:w="1"/><text x="96.5803%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="96.3303%" y="405" width="0.1529%" height="15" fill="rgb(225,182,9)" fg:x="630" fg:w="1"/><text x="96.5803%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="96.3303%" y="389" width="0.1529%" height="15" fill="rgb(243,178,37)" fg:x="630" fg:w="1"/><text x="96.5803%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="96.3303%" y="373" width="0.1529%" height="15" fill="rgb(232,139,19)" fg:x="630" fg:w="1"/><text x="96.5803%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="96.3303%" y="357" width="0.1529%" height="15" fill="rgb(225,201,24)" fg:x="630" fg:w="1"/><text x="96.5803%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="96.3303%" y="341" width="0.1529%" height="15" fill="rgb(221,47,46)" fg:x="630" fg:w="1"/><text x="96.5803%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="96.3303%" y="325" width="0.1529%" height="15" fill="rgb(249,23,13)" fg:x="630" fg:w="1"/><text x="96.5803%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="96.3303%" y="309" width="0.1529%" height="15" fill="rgb(219,9,5)" fg:x="630" fg:w="1"/><text x="96.5803%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (562 samples, 85.93%)</title><rect x="10.7034%" y="693" width="85.9327%" height="15" fill="rgb(254,171,16)" fg:x="70" fg:w="562"/><text x="10.9534%" y="703.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (562 samples, 85.93%)</title><rect x="10.7034%" y="677" width="85.9327%" height="15" fill="rgb(230,171,20)" fg:x="70" fg:w="562"/><text x="10.9534%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (562 samples, 85.93%)</title><rect x="10.7034%" y="661" width="85.9327%" height="15" fill="rgb(210,71,41)" fg:x="70" fg:w="562"/><text x="10.9534%" y="671.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (562 samples, 85.93%)</title><rect x="10.7034%" y="645" width="85.9327%" height="15" fill="rgb(206,173,20)" fg:x="70" fg:w="562"/><text x="10.9534%" y="655.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.15%)</title><rect x="96.4832%" y="629" width="0.1529%" height="15" fill="rgb(233,88,34)" fg:x="631" fg:w="1"/><text x="96.7332%" y="639.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.15%)</title><rect x="96.4832%" y="613" width="0.1529%" height="15" fill="rgb(223,209,46)" fg:x="631" fg:w="1"/><text x="96.7332%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="96.4832%" y="597" width="0.1529%" height="15" fill="rgb(250,43,18)" fg:x="631" fg:w="1"/><text x="96.7332%" y="607.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.15%)</title><rect x="96.4832%" y="581" width="0.1529%" height="15" fill="rgb(208,13,10)" fg:x="631" fg:w="1"/><text x="96.7332%" y="591.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.15%)</title><rect x="96.4832%" y="565" width="0.1529%" height="15" fill="rgb(212,200,36)" fg:x="631" fg:w="1"/><text x="96.7332%" y="575.50"></text></g><g><title>new_heap (1 samples, 0.15%)</title><rect x="96.4832%" y="549" width="0.1529%" height="15" fill="rgb(225,90,30)" fg:x="631" fg:w="1"/><text x="96.7332%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.4832%" y="533" width="0.1529%" height="15" fill="rgb(236,182,39)" fg:x="631" fg:w="1"/><text x="96.7332%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.4832%" y="517" width="0.1529%" height="15" fill="rgb(212,144,35)" fg:x="631" fg:w="1"/><text x="96.7332%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.4832%" y="501" width="0.1529%" height="15" fill="rgb(228,63,44)" fg:x="631" fg:w="1"/><text x="96.7332%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.4832%" y="485" width="0.1529%" height="15" fill="rgb(228,109,6)" fg:x="631" fg:w="1"/><text x="96.7332%" y="495.50"></text></g><g><title>__sigaltstack (2 samples, 0.31%)</title><rect x="96.6361%" y="661" width="0.3058%" height="15" fill="rgb(238,117,24)" fg:x="632" fg:w="2"/><text x="96.8861%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="96.6361%" y="645" width="0.3058%" height="15" fill="rgb(242,26,26)" fg:x="632" fg:w="2"/><text x="96.8861%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="96.6361%" y="629" width="0.3058%" height="15" fill="rgb(221,92,48)" fg:x="632" fg:w="2"/><text x="96.8861%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="96.6361%" y="613" width="0.3058%" height="15" fill="rgb(209,209,32)" fg:x="632" fg:w="2"/><text x="96.8861%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.7890%" y="597" width="0.1529%" height="15" fill="rgb(221,70,22)" fg:x="633" fg:w="1"/><text x="97.0390%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.7890%" y="581" width="0.1529%" height="15" fill="rgb(248,145,5)" fg:x="633" fg:w="1"/><text x="97.0390%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.7890%" y="565" width="0.1529%" height="15" fill="rgb(226,116,26)" fg:x="633" fg:w="1"/><text x="97.0390%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.7890%" y="549" width="0.1529%" height="15" fill="rgb(244,5,17)" fg:x="633" fg:w="1"/><text x="97.0390%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="96.7890%" y="533" width="0.1529%" height="15" fill="rgb(252,159,33)" fg:x="633" fg:w="1"/><text x="97.0390%" y="543.50"></text></g><g><title>__GI___clone (618 samples, 94.50%)</title><rect x="3.2110%" y="741" width="94.4954%" height="15" fill="rgb(206,71,0)" fg:x="21" fg:w="618"/><text x="3.4610%" y="751.50">__GI___clone</text></g><g><title>start_thread (569 samples, 87.00%)</title><rect x="10.7034%" y="725" width="87.0031%" height="15" fill="rgb(233,118,54)" fg:x="70" fg:w="569"/><text x="10.9534%" y="735.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (569 samples, 87.00%)</title><rect x="10.7034%" y="709" width="87.0031%" height="15" fill="rgb(234,83,48)" fg:x="70" fg:w="569"/><text x="10.9534%" y="719.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (7 samples, 1.07%)</title><rect x="96.6361%" y="693" width="1.0703%" height="15" fill="rgb(228,3,54)" fg:x="632" fg:w="7"/><text x="96.8861%" y="703.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (7 samples, 1.07%)</title><rect x="96.6361%" y="677" width="1.0703%" height="15" fill="rgb(226,155,13)" fg:x="632" fg:w="7"/><text x="96.8861%" y="687.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 0.76%)</title><rect x="96.9419%" y="661" width="0.7645%" height="15" fill="rgb(241,28,37)" fg:x="634" fg:w="5"/><text x="97.1919%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 0.76%)</title><rect x="96.9419%" y="645" width="0.7645%" height="15" fill="rgb(233,93,10)" fg:x="634" fg:w="5"/><text x="97.1919%" y="655.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.76%)</title><rect x="96.9419%" y="629" width="0.7645%" height="15" fill="rgb(225,113,19)" fg:x="634" fg:w="5"/><text x="97.1919%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="96.9419%" y="613" width="0.7645%" height="15" fill="rgb(241,2,18)" fg:x="634" fg:w="5"/><text x="97.1919%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="96.9419%" y="597" width="0.7645%" height="15" fill="rgb(228,207,21)" fg:x="634" fg:w="5"/><text x="97.1919%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="96.9419%" y="581" width="0.7645%" height="15" fill="rgb(213,211,35)" fg:x="634" fg:w="5"/><text x="97.1919%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="97.0948%" y="565" width="0.6116%" height="15" fill="rgb(209,83,10)" fg:x="635" fg:w="4"/><text x="97.3448%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="97.0948%" y="549" width="0.6116%" height="15" fill="rgb(209,164,1)" fg:x="635" fg:w="4"/><text x="97.3448%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="97.0948%" y="533" width="0.6116%" height="15" fill="rgb(213,184,43)" fg:x="635" fg:w="4"/><text x="97.3448%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="97.0948%" y="517" width="0.6116%" height="15" fill="rgb(231,61,34)" fg:x="635" fg:w="4"/><text x="97.3448%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="97.0948%" y="501" width="0.6116%" height="15" fill="rgb(235,75,3)" fg:x="635" fg:w="4"/><text x="97.3448%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.61%)</title><rect x="97.0948%" y="485" width="0.6116%" height="15" fill="rgb(220,106,47)" fg:x="635" fg:w="4"/><text x="97.3448%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="97.2477%" y="469" width="0.4587%" height="15" fill="rgb(210,196,33)" fg:x="636" fg:w="3"/><text x="97.4977%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="97.4006%" y="453" width="0.3058%" height="15" fill="rgb(229,154,42)" fg:x="637" fg:w="2"/><text x="97.6506%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="97.5535%" y="437" width="0.1529%" height="15" fill="rgb(228,114,26)" fg:x="638" fg:w="1"/><text x="97.8035%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="97.5535%" y="421" width="0.1529%" height="15" fill="rgb(208,144,1)" fg:x="638" fg:w="1"/><text x="97.8035%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="693" width="0.9174%" height="15" fill="rgb(239,112,37)" fg:x="639" fg:w="6"/><text x="97.9564%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="677" width="0.9174%" height="15" fill="rgb(210,96,50)" fg:x="639" fg:w="6"/><text x="97.9564%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="661" width="0.9174%" height="15" fill="rgb(222,178,2)" fg:x="639" fg:w="6"/><text x="97.9564%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="645" width="0.9174%" height="15" fill="rgb(226,74,18)" fg:x="639" fg:w="6"/><text x="97.9564%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="629" width="0.9174%" height="15" fill="rgb(225,67,54)" fg:x="639" fg:w="6"/><text x="97.9564%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="613" width="0.9174%" height="15" fill="rgb(251,92,32)" fg:x="639" fg:w="6"/><text x="97.9564%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="597" width="0.9174%" height="15" fill="rgb(228,149,22)" fg:x="639" fg:w="6"/><text x="97.9564%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="581" width="0.9174%" height="15" fill="rgb(243,54,13)" fg:x="639" fg:w="6"/><text x="97.9564%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="565" width="0.9174%" height="15" fill="rgb(243,180,28)" fg:x="639" fg:w="6"/><text x="97.9564%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="549" width="0.9174%" height="15" fill="rgb(208,167,24)" fg:x="639" fg:w="6"/><text x="97.9564%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="533" width="0.9174%" height="15" fill="rgb(245,73,45)" fg:x="639" fg:w="6"/><text x="97.9564%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="517" width="0.9174%" height="15" fill="rgb(237,203,48)" fg:x="639" fg:w="6"/><text x="97.9564%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="501" width="0.9174%" height="15" fill="rgb(211,197,16)" fg:x="639" fg:w="6"/><text x="97.9564%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="485" width="0.9174%" height="15" fill="rgb(243,99,51)" fg:x="639" fg:w="6"/><text x="97.9564%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="469" width="0.9174%" height="15" fill="rgb(215,123,29)" fg:x="639" fg:w="6"/><text x="97.9564%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="453" width="0.9174%" height="15" fill="rgb(239,186,37)" fg:x="639" fg:w="6"/><text x="97.9564%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="437" width="0.9174%" height="15" fill="rgb(252,136,39)" fg:x="639" fg:w="6"/><text x="97.9564%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="421" width="0.9174%" height="15" fill="rgb(223,213,32)" fg:x="639" fg:w="6"/><text x="97.9564%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="97.7064%" y="405" width="0.9174%" height="15" fill="rgb(233,115,5)" fg:x="639" fg:w="6"/><text x="97.9564%" y="415.50"></text></g><g><title>__libc_csu_init (7 samples, 1.07%)</title><rect x="97.7064%" y="709" width="1.0703%" height="15" fill="rgb(207,226,44)" fg:x="639" fg:w="7"/><text x="97.9564%" y="719.50"></text></g><g><title>std::sys::unix::args::imp::ARGV_INIT_ARRAY::init_wrapper (1 samples, 0.15%)</title><rect x="98.6239%" y="693" width="0.1529%" height="15" fill="rgb(208,126,0)" fg:x="645" fg:w="1"/><text x="98.8739%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="677" width="0.1529%" height="15" fill="rgb(244,66,21)" fg:x="645" fg:w="1"/><text x="98.8739%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="661" width="0.1529%" height="15" fill="rgb(222,97,12)" fg:x="645" fg:w="1"/><text x="98.8739%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="645" width="0.1529%" height="15" fill="rgb(219,213,19)" fg:x="645" fg:w="1"/><text x="98.8739%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="629" width="0.1529%" height="15" fill="rgb(252,169,30)" fg:x="645" fg:w="1"/><text x="98.8739%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="613" width="0.1529%" height="15" fill="rgb(206,32,51)" fg:x="645" fg:w="1"/><text x="98.8739%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="597" width="0.1529%" height="15" fill="rgb(250,172,42)" fg:x="645" fg:w="1"/><text x="98.8739%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="581" width="0.1529%" height="15" fill="rgb(209,34,43)" fg:x="645" fg:w="1"/><text x="98.8739%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="565" width="0.1529%" height="15" fill="rgb(223,11,35)" fg:x="645" fg:w="1"/><text x="98.8739%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="549" width="0.1529%" height="15" fill="rgb(251,219,26)" fg:x="645" fg:w="1"/><text x="98.8739%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6239%" y="533" width="0.1529%" height="15" fill="rgb(231,119,3)" fg:x="645" fg:w="1"/><text x="98.8739%" y="543.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.15%)</title><rect x="98.7768%" y="613" width="0.1529%" height="15" fill="rgb(216,97,11)" fg:x="646" fg:w="1"/><text x="99.0268%" y="623.50"></text></g><g><title>std::panicking::try (1 samples, 0.15%)</title><rect x="98.7768%" y="597" width="0.1529%" height="15" fill="rgb(223,59,9)" fg:x="646" fg:w="1"/><text x="99.0268%" y="607.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.15%)</title><rect x="98.7768%" y="581" width="0.1529%" height="15" fill="rgb(233,93,31)" fg:x="646" fg:w="1"/><text x="99.0268%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.15%)</title><rect x="98.7768%" y="565" width="0.1529%" height="15" fill="rgb(239,81,33)" fg:x="646" fg:w="1"/><text x="99.0268%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.15%)</title><rect x="98.7768%" y="549" width="0.1529%" height="15" fill="rgb(213,120,34)" fg:x="646" fg:w="1"/><text x="99.0268%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.15%)</title><rect x="98.7768%" y="533" width="0.1529%" height="15" fill="rgb(243,49,53)" fg:x="646" fg:w="1"/><text x="99.0268%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.15%)</title><rect x="98.7768%" y="517" width="0.1529%" height="15" fill="rgb(247,216,33)" fg:x="646" fg:w="1"/><text x="99.0268%" y="527.50"></text></g><g><title>lab4::main (1 samples, 0.15%)</title><rect x="98.7768%" y="501" width="0.1529%" height="15" fill="rgb(226,26,14)" fg:x="646" fg:w="1"/><text x="99.0268%" y="511.50"></text></g><g><title>lab4::hackathon (1 samples, 0.15%)</title><rect x="98.7768%" y="485" width="0.1529%" height="15" fill="rgb(215,49,53)" fg:x="646" fg:w="1"/><text x="99.0268%" y="495.50"></text></g><g><title>lab4::get_ideas (1 samples, 0.15%)</title><rect x="98.7768%" y="469" width="0.1529%" height="15" fill="rgb(245,162,40)" fg:x="646" fg:w="1"/><text x="99.0268%" y="479.50"></text></g><g><title>lab4::txt_to_lines (1 samples, 0.15%)</title><rect x="98.7768%" y="453" width="0.1529%" height="15" fill="rgb(229,68,17)" fg:x="646" fg:w="1"/><text x="99.0268%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (1 samples, 0.15%)</title><rect x="98.7768%" y="437" width="0.1529%" height="15" fill="rgb(213,182,10)" fg:x="646" fg:w="1"/><text x="99.0268%" y="447.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (1 samples, 0.15%)</title><rect x="98.7768%" y="421" width="0.1529%" height="15" fill="rgb(245,125,30)" fg:x="646" fg:w="1"/><text x="99.0268%" y="431.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::with_capacity (1 samples, 0.15%)</title><rect x="98.7768%" y="405" width="0.1529%" height="15" fill="rgb(232,202,2)" fg:x="646" fg:w="1"/><text x="99.0268%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (1 samples, 0.15%)</title><rect x="98.7768%" y="389" width="0.1529%" height="15" fill="rgb(237,140,51)" fg:x="646" fg:w="1"/><text x="99.0268%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="98.7768%" y="373" width="0.1529%" height="15" fill="rgb(236,157,25)" fg:x="646" fg:w="1"/><text x="99.0268%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="98.7768%" y="357" width="0.1529%" height="15" fill="rgb(219,209,0)" fg:x="646" fg:w="1"/><text x="99.0268%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="98.7768%" y="341" width="0.1529%" height="15" fill="rgb(240,116,54)" fg:x="646" fg:w="1"/><text x="99.0268%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="98.7768%" y="325" width="0.1529%" height="15" fill="rgb(216,10,36)" fg:x="646" fg:w="1"/><text x="99.0268%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="98.7768%" y="309" width="0.1529%" height="15" fill="rgb(222,72,44)" fg:x="646" fg:w="1"/><text x="99.0268%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="98.7768%" y="293" width="0.1529%" height="15" fill="rgb(232,159,9)" fg:x="646" fg:w="1"/><text x="99.0268%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="98.7768%" y="277" width="0.1529%" height="15" fill="rgb(210,39,32)" fg:x="646" fg:w="1"/><text x="99.0268%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="98.7768%" y="261" width="0.1529%" height="15" fill="rgb(216,194,45)" fg:x="646" fg:w="1"/><text x="99.0268%" y="271.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="98.7768%" y="245" width="0.1529%" height="15" fill="rgb(218,18,35)" fg:x="646" fg:w="1"/><text x="99.0268%" y="255.50"></text></g><g><title>lab4 (648 samples, 99.08%)</title><rect x="0.0000%" y="757" width="99.0826%" height="15" fill="rgb(207,83,51)" fg:x="0" fg:w="648"/><text x="0.2500%" y="767.50">lab4</text></g><g><title>_start (9 samples, 1.38%)</title><rect x="97.7064%" y="741" width="1.3761%" height="15" fill="rgb(225,63,43)" fg:x="639" fg:w="9"/><text x="97.9564%" y="751.50"></text></g><g><title>__libc_start_main (9 samples, 1.38%)</title><rect x="97.7064%" y="725" width="1.3761%" height="15" fill="rgb(207,57,36)" fg:x="639" fg:w="9"/><text x="97.9564%" y="735.50"></text></g><g><title>main (2 samples, 0.31%)</title><rect x="98.7768%" y="709" width="0.3058%" height="15" fill="rgb(216,99,33)" fg:x="646" fg:w="2"/><text x="99.0268%" y="719.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.31%)</title><rect x="98.7768%" y="693" width="0.3058%" height="15" fill="rgb(225,42,16)" fg:x="646" fg:w="2"/><text x="99.0268%" y="703.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.31%)</title><rect x="98.7768%" y="677" width="0.3058%" height="15" fill="rgb(220,201,45)" fg:x="646" fg:w="2"/><text x="99.0268%" y="687.50"></text></g><g><title>std::panicking::try (2 samples, 0.31%)</title><rect x="98.7768%" y="661" width="0.3058%" height="15" fill="rgb(225,33,4)" fg:x="646" fg:w="2"/><text x="99.0268%" y="671.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.31%)</title><rect x="98.7768%" y="645" width="0.3058%" height="15" fill="rgb(224,33,50)" fg:x="646" fg:w="2"/><text x="99.0268%" y="655.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (2 samples, 0.31%)</title><rect x="98.7768%" y="629" width="0.3058%" height="15" fill="rgb(246,198,51)" fg:x="646" fg:w="2"/><text x="99.0268%" y="639.50"></text></g><g><title>std::rt::init (1 samples, 0.15%)</title><rect x="98.9297%" y="613" width="0.1529%" height="15" fill="rgb(205,22,4)" fg:x="647" fg:w="1"/><text x="99.1797%" y="623.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.15%)</title><rect x="98.9297%" y="597" width="0.1529%" height="15" fill="rgb(206,3,8)" fg:x="647" fg:w="1"/><text x="99.1797%" y="607.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.15%)</title><rect x="98.9297%" y="581" width="0.1529%" height="15" fill="rgb(251,23,15)" fg:x="647" fg:w="1"/><text x="99.1797%" y="591.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.15%)</title><rect x="98.9297%" y="565" width="0.1529%" height="15" fill="rgb(252,88,28)" fg:x="647" fg:w="1"/><text x="99.1797%" y="575.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.15%)</title><rect x="98.9297%" y="549" width="0.1529%" height="15" fill="rgb(212,127,14)" fg:x="647" fg:w="1"/><text x="99.1797%" y="559.50"></text></g><g><title>_IO_new_fopen (1 samples, 0.15%)</title><rect x="98.9297%" y="533" width="0.1529%" height="15" fill="rgb(247,145,37)" fg:x="647" fg:w="1"/><text x="99.1797%" y="543.50"></text></g><g><title>malloc_hook_ini (1 samples, 0.15%)</title><rect x="98.9297%" y="517" width="0.1529%" height="15" fill="rgb(209,117,53)" fg:x="647" fg:w="1"/><text x="99.1797%" y="527.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.15%)</title><rect x="98.9297%" y="501" width="0.1529%" height="15" fill="rgb(212,90,42)" fg:x="647" fg:w="1"/><text x="99.1797%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="98.9297%" y="485" width="0.1529%" height="15" fill="rgb(218,164,37)" fg:x="647" fg:w="1"/><text x="99.1797%" y="495.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="98.9297%" y="469" width="0.1529%" height="15" fill="rgb(246,65,34)" fg:x="647" fg:w="1"/><text x="99.1797%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="453" width="0.1529%" height="15" fill="rgb(231,100,33)" fg:x="647" fg:w="1"/><text x="99.1797%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="437" width="0.1529%" height="15" fill="rgb(228,126,14)" fg:x="647" fg:w="1"/><text x="99.1797%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="421" width="0.1529%" height="15" fill="rgb(215,173,21)" fg:x="647" fg:w="1"/><text x="99.1797%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="405" width="0.1529%" height="15" fill="rgb(210,6,40)" fg:x="647" fg:w="1"/><text x="99.1797%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="389" width="0.1529%" height="15" fill="rgb(212,48,18)" fg:x="647" fg:w="1"/><text x="99.1797%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="373" width="0.1529%" height="15" fill="rgb(230,214,11)" fg:x="647" fg:w="1"/><text x="99.1797%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="357" width="0.1529%" height="15" fill="rgb(254,105,39)" fg:x="647" fg:w="1"/><text x="99.1797%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9297%" y="341" width="0.1529%" height="15" fill="rgb(245,158,5)" fg:x="647" fg:w="1"/><text x="99.1797%" y="351.50"></text></g><g><title>all (654 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(249,208,11)" fg:x="0" fg:w="654"/><text x="0.2500%" y="783.50"></text></g><g><title>perf-exec (6 samples, 0.92%)</title><rect x="99.0826%" y="757" width="0.9174%" height="15" fill="rgb(210,39,28)" fg:x="648" fg:w="6"/><text x="99.3326%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="741" width="0.9174%" height="15" fill="rgb(211,56,53)" fg:x="648" fg:w="6"/><text x="99.3326%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="725" width="0.9174%" height="15" fill="rgb(226,201,30)" fg:x="648" fg:w="6"/><text x="99.3326%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="709" width="0.9174%" height="15" fill="rgb(239,101,34)" fg:x="648" fg:w="6"/><text x="99.3326%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="693" width="0.9174%" height="15" fill="rgb(226,209,5)" fg:x="648" fg:w="6"/><text x="99.3326%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="677" width="0.9174%" height="15" fill="rgb(250,105,47)" fg:x="648" fg:w="6"/><text x="99.3326%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="661" width="0.9174%" height="15" fill="rgb(230,72,3)" fg:x="648" fg:w="6"/><text x="99.3326%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="645" width="0.9174%" height="15" fill="rgb(232,218,39)" fg:x="648" fg:w="6"/><text x="99.3326%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="629" width="0.9174%" height="15" fill="rgb(248,166,6)" fg:x="648" fg:w="6"/><text x="99.3326%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="613" width="0.9174%" height="15" fill="rgb(247,89,20)" fg:x="648" fg:w="6"/><text x="99.3326%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="597" width="0.9174%" height="15" fill="rgb(248,130,54)" fg:x="648" fg:w="6"/><text x="99.3326%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="581" width="0.9174%" height="15" fill="rgb(234,196,4)" fg:x="648" fg:w="6"/><text x="99.3326%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="565" width="0.9174%" height="15" fill="rgb(250,143,31)" fg:x="648" fg:w="6"/><text x="99.3326%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="549" width="0.9174%" height="15" fill="rgb(211,110,34)" fg:x="648" fg:w="6"/><text x="99.3326%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="99.0826%" y="533" width="0.9174%" height="15" fill="rgb(215,124,48)" fg:x="648" fg:w="6"/><text x="99.3326%" y="543.50"></text></g></svg></svg>